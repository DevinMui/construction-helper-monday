{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["monday","mondaySdk","calendarData","setty","homeNumber","nameArray","promises","propertyArray","calendarArray","colorArray","data","date","price","this","x","y","App","props","randomData","e","preventDefault","setState","prevState","map","d","name","value","Math","floor","random","state","settings","boardData","data2","dataVarCal","dataVarLine","address","length","Date","style","height","margin","top","right","bottom","left","xScale","type","yScale","min","max","stacked","reverse","yFormat","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabelYOffset","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","to","emptyColor","colors","yearSpacing","minValue","maxValue","monthBorderColor","dayBorderWidth","dayBorderColor","itemCount","returnObj","i","dataVar","push","subCalendarItem","variable","aDataPoint","k","n","m","property","id","color","then","res","idValue","found","it","values","val","next","parseInt","replaceAll","month","getMonth","slice","day","getUTCDate","year","getUTCFullYear","newdate","caldate","console","log","j","allHomes","oneHomeJson","pricePoints","jsonParsedPricePoints","JSON","parse","subset","Set","subtableID","add","query","api","Promise","all","parsePricePoint","listen","context","variables","boardIds","parseData","background","paddingLeft","paddingTop","renderItems","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.617e6fac.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport { LineChart } from \"react-d3-components\";\r\nimport mondaySdk from \"monday-sdk-js\";\r\nimport { Card } from '@material-ui/core';\r\nimport { ResponsiveLine } from '@nivo/line';\r\nimport { ResponsiveCalendar } from '@nivo/calendar';\r\nimport sk from './calData.js'\r\n\r\nconst monday = mondaySdk();\r\n\r\nlet calendarData = [\r\n    [\r\n        {\r\n        \"day\": \"2017-08-23\",\r\n        \"value\": 397\r\n        },\r\n        {\r\n            \"day\": \"2017-08-04\",\r\n            \"value\": 79\r\n        }\r\n    ], [], [], [], [], [], [], [], []\r\n];\r\n\r\nlet data2 = [\r\n    {\r\n        \"id\": \"japan\",\r\n        \"color\": \"hsl(36, 70%, 50%)\",\r\n        \"data\": [\r\n            {\r\n                \"x\": \"plane\",\r\n                \"y\": 211\r\n            },\r\n            {\r\n                \"x\": \"helicopter\",\r\n                \"y\": 206\r\n            },\r\n            {\r\n                \"x\": \"boat\",\r\n                \"y\": 3\r\n            },\r\n            {\r\n                \"x\": \"train\",\r\n                \"y\": 85\r\n            },\r\n            {\r\n                \"x\": \"subway\",\r\n                \"y\": 252\r\n            },\r\n            {\r\n                \"x\": \"bus\",\r\n                \"y\": 136\r\n            },\r\n            {\r\n                \"x\": \"car\",\r\n                \"y\": 38\r\n            },\r\n            {\r\n                \"x\": \"moto\",\r\n                \"y\": 206\r\n            },\r\n            {\r\n                \"x\": \"bicycle\",\r\n                \"y\": 121\r\n            },\r\n            {\r\n                \"x\": \"horse\",\r\n                \"y\": 242\r\n            },\r\n            {\r\n                \"x\": \"skateboard\",\r\n                \"y\": 211\r\n            },\r\n            {\r\n                \"x\": \"others\",\r\n                \"y\": 242\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"id\": \"france\",\r\n        \"color\": \"hsl(170, 70%, 50%)\",\r\n        \"data\": [\r\n            {\r\n                \"x\": \"plane\",\r\n                \"y\": 27\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\nvar tooltipScatter = function (x, y) {\r\n    return \"x: \" + x + \" y: \" + y;\r\n};\r\n\r\n//let mappy = new Map();\r\nvar setty = [];\r\nvar homeNumber = 0;\r\nvar nameArray = [];\r\nvar promises = [];\r\nvar propertyArray = [];\r\nvar calendarArray = [];\r\nvar tempDataPoint = {};\r\nvar colorArray = [\"hsl(36, 70%, 50%)\", \"hsl(170, 70%, 50%)\", \"hsl(217, 70%, 50%)\", \"hsl(240, 70%, 50%)\", \"hsl(286, 70%, 50%)\"];\r\n\r\n\r\n\r\nclass data {\r\n    constructor(date, price) {\r\n        this.x = date;\r\n        this.y = price;\r\n    }\r\n};\r\n\r\n\r\n\r\n//'query { items(ids: 881258594) { id column_values { id type value } } }'\r\n\r\nclass App extends React.Component {\r\n    \r\n\r\n    subCalendarItem(dataVarCal, dataVarLine, address) {\r\n        if (dataVarCal != null && dataVarLine != null && dataVarLine != \"\") {\r\n            var length = dataVarCal[\"length\"];\r\n            if (length != 0) {\r\n                var endDate = new Date(dataVarCal[length - 1][\"day\"]);\r\n                var startDate = new Date(dataVarCal[0][\"day\"]);\r\n                return (<div>\r\n                    <div >\r\n                        <h2>\r\n                            {address}\r\n                        </h2>\r\n                    </div>\r\n                    <div style={{ height: 400 }}>\r\n                        <ResponsiveLine\r\n                            data={dataVarLine}\r\n                            margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n                            xScale={{ type: 'point' }}\r\n                            yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n                            yFormat=\" >-.2f\"\r\n                            axisTop={null}\r\n                            axisRight={null}\r\n                            axisBottom={{\r\n                                orient: 'bottom',\r\n                                tickSize: 5,\r\n                                tickPadding: 5,\r\n                                tickRotation: 0,\r\n                                legend: 'Dates',\r\n                                legendOffset: 36,\r\n                                legendPosition: 'middle'\r\n                            }}\r\n                            axisLeft={{\r\n                                orient: 'left',\r\n                                tickSize: 5,\r\n                                tickPadding: 5,\r\n                                tickRotation: 0,\r\n                                legend: 'Price',\r\n                                legendOffset: -40,\r\n                                legendPosition: 'middle'\r\n                            }}\r\n                            pointSize={10}\r\n                            pointColor={{ theme: 'background' }}\r\n                            pointBorderWidth={2}\r\n                            pointBorderColor={{ from: 'serieColor' }}\r\n                            pointLabelYOffset={-12}\r\n                            useMesh={true}\r\n                            legends={[\r\n                                {\r\n                                    anchor: 'bottom-right',\r\n                                    direction: 'column',\r\n                                    justify: false,\r\n                                    translateX: 100,\r\n                                    translateY: 0,\r\n                                    itemsSpacing: 0,\r\n                                    itemDirection: 'left-to-right',\r\n                                    itemWidth: 80,\r\n                                    itemHeight: 20,\r\n                                    itemOpacity: 0.75,\r\n                                    symbolSize: 12,\r\n                                    symbolShape: 'circle',\r\n                                    symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                                    effects: [\r\n                                        {\r\n                                            on: 'hover',\r\n                                            style: {\r\n                                                itemBackground: 'rgba(0, 0, 0, .03)',\r\n                                                itemOpacity: 1\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                    <div style={{ height: 600 }}>\r\n                        <ResponsiveCalendar\r\n                            data={dataVarCal}\r\n                            from={dataVarCal[0][\"day\"]}\r\n                            to={dataVarCal[length - 1][\"day\"]}\r\n                            emptyColor=\"#eeeeee\"\r\n                            colors={['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']}\r\n                            margin={{ top: 40, right: 40, bottom: 40, left: 40 }}\r\n                            yearSpacing={40}\r\n                            minValue={dataVarCal[0][\"value\"]}\r\n                            maxValue={dataVarCal[length - 1][\"value\"]}\r\n                            monthBorderColor=\"#ffffff\"\r\n                            dayBorderWidth={2}\r\n                            dayBorderColor=\"#ffffff\"\r\n                            legends={[\r\n                                {\r\n                                    anchor: 'bottom-right',\r\n                                    direction: 'row',\r\n                                    translateY: 36,\r\n                                    itemCount: 4,\r\n                                    itemWidth: 42,\r\n                                    itemHeight: 36,\r\n                                    itemsSpacing: 14,\r\n                                    itemDirection: 'right-to-left'\r\n                                }\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                </div>);\r\n            }\r\n            else {\r\n                return (<div></div>);\r\n            }\r\n        }\r\n        else {\r\n            return (<div></div>);\r\n        }\r\n        \r\n    }\r\n    renderItems() {\r\n        var returnObj =[];\r\n        var i = 0; \r\n        for (i = 0; i < homeNumber; i++) {\r\n            var dataVar = calendarData[i];\r\n            var dataVarLine = [];\r\n            dataVarLine[0] = propertyArray[i];\r\n            returnObj.push(this.subCalendarItem(dataVar, dataVarLine, nameArray[i]));\r\n        }\r\n        return returnObj;\r\n    }\r\n    \r\n    parsePricePoint(variable, aDataPoint, address) {\r\n        var k, n, m = 0, b; \r\n        for (n = 0; n < homeNumber; n++) {\r\n            var property = { id: nameArray[n], color: colorArray[n], data:[]};\r\n            propertyArray[n] = property;\r\n            calendarArray[n] = [];\r\n        }\r\n\r\n        for (k = 0; k < variable[\"length\"]; k++) {\r\n            variable[k].then(res =>\r\n            {\r\n                var idValue = res.data[\"items\"][0][\"id\"];\r\n                n = 0;\r\n                var found = false;\r\n                for (n = 0; n < homeNumber; n++) {\r\n                    for (var it = setty[n].values(), val = null; val = it.next().value;) {\r\n                        if (val == idValue) {\r\n                            found = true;\r\n                        }\r\n                    }\r\n                    if (found) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (!res.data[\"items\"][0][\"column_values\"][3][\"value\"] || !res.data[\"items\"][0][\"column_values\"][4][\"value\"]) {\r\n                    ;\r\n                }\r\n                else {\r\n                    var d = new Date(parseInt(res.data[\"items\"][0][\"column_values\"][3][\"value\"].replaceAll('\"', ''), 10)); // The 0 there is the key, which sets the date to the epoch\r\n                    var month = (\"0\" + (d.getMonth() + 1)).slice(-2)\r\n                    var day = d.getUTCDate();\r\n                    var year = d.getUTCFullYear();\r\n                    var newdate = year + \"/\" + month + \"/\" + day;\r\n                    var caldate = year + \"-\" + month + \"-\" + day;\r\n                    propertyArray[n].data.push({ x: newdate, y: (res.data[\"items\"][0][\"column_values\"][4][\"value\"].replaceAll('\"', '')) });\r\n                    calendarArray[n].push({ day: caldate, value: parseInt((res.data[\"items\"][0][\"column_values\"][4][\"value\"].replaceAll('\"', '')), 10) });\r\n                }\r\n                if (m == (variable[\"length\"] - 1)) {\r\n                    //console.log(\"HEJEJ\");\r\n                    //console.log(propertyArray);\r\n                    //propertyArray.sort(function (a, b) {\r\n                    //    //console.log(a[\"data\"][\"length\"]);\r\n                    //    var aLength = a[\"data\"][\"length\"];\r\n                    //    var bLength = b[\"data\"][\"length\"];\r\n                    //    var aDate = new Date(a[\"data\"][aLength - 1][\"x\"]);\r\n                    //    var bDate = new Date(b[\"data\"][bLength - 1][\"x\"]);\r\n                    //    var diffTime = bDate - aDate;\r\n                    //    console.log(diffTime);\r\n                    //    return diffTime;\r\n                    //});\r\n                    console.log(propertyArray);\r\n                    data2 = propertyArray;\r\n                    this.setState({ data2: propertyArray });\r\n                    this.setState({ calendarData: calendarArray });\r\n                    calendarData = calendarArray;\r\n                }\r\n                m++;\r\n               \r\n            });\r\n        }\r\n    }\r\n\r\n    parseData(variable) {\r\n        var allHomes = variable[\"boards\"][0][\"items\"];\r\n        var allHomePrices = [];\r\n        var i, j;\r\n        var propertyArray = [];\r\n        homeNumber = allHomes[\"length\"];\r\n        for (i = 0; i < homeNumber; i++) {\r\n            var aDataPoint = [];\r\n            var oneHomeJson = allHomes[i][\"column_values\"];\r\n            var pricePoints = oneHomeJson[\"14\"][\"value\"];\r\n            var address = oneHomeJson[\"0\"][\"value\"];\r\n            var jsonParsedPricePoints = JSON.parse(pricePoints);\r\n            var listOfIDs = [];\r\n            var subset = new Set();\r\n            nameArray.push(address);\r\n            for (j = 0; j < jsonParsedPricePoints[\"linkedPulseIds\"][\"length\"]; j++) {\r\n                var subtableID = jsonParsedPricePoints[\"linkedPulseIds\"][j][\"linkedPulseId\"];\r\n                subset.add(subtableID);\r\n                var query = \"query { items(ids: \" + subtableID + \") { id column_values { id type value } } }\";\r\n                var dataPoint = new data(\"\", \"\");\r\n                promises.push(monday.api(query)); //(res => { this.parsePricePoint(res.data, aDataPoint); });\r\n\r\n            }\r\n            setty[i] = subset;\r\n            //if (i == 0) {\r\n                Promise.all(promises).then(res => { this.parsePricePoint(promises, aDataPoint, address); });\r\n           // }\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Default state\r\n        this.state = {\r\n            settings: {},\r\n            name: \"\",\r\n            boardData: {},\r\n            data2: [],\r\n            calendarData: [],\r\n        };\r\n    }\r\n\r\n    randomData = (e) => {\r\n        e.preventDefault();\r\n        this.setState((prevState) => {\r\n            const data = prevState.data.map(d => ({\r\n                name: d.name,\r\n                value: Math.floor((Math.random() * 100) + 1)\r\n            }))\r\n            return {\r\n                data\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        monday.listen(\"settings\", res => {\r\n            this.setState({ settings: res.data });\r\n        });\r\n\r\n        monday.listen(\"context\", res => {\r\n            this.setState({ context: res.data });\r\n            monday.api('query { boards(ids: [878537780]) { items { name group { id } column_values { id value text }  } }}',\r\n                { variables: { boardIds: this.state.context.boardIds } }\r\n            )\r\n                .then(res => {\r\n                    this.setState({ boardData: res.data });\r\n                });\r\n        })\r\n\r\n        monday.api('query { boards(ids: [878537780]) { items { name group { id } column_values { id value text }  } }}').then(res => { this.parseData(res.data); });\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <div style={{ background: (this.state.settings.background), paddingLeft: 100, paddingTop: 100 }}>\r\n               \r\n                {this.renderItems()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}