{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jenny\\\\OneDrive\\\\Desktop\\\\Makers\\\\construction-helper-monday\\\\view2\\\\quickstart-react\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport d3Utils from './utils';\nimport { DateUtils } from \"react-day-picker\";\nimport d3Config from './config';\nimport { axisLeft, axisBottom, format, timeFormat, scaleTime, scaleLinear, select, curveMonotoneX, line as d3Line } from 'd3';\nconst monday = mondaySdk();\n\nconst drawAxes = () => {\n  select('.line-chart-xaxis').call(xAxis);\n  select('.line-chart-yaxis').call(yAxis);\n};\n\nconst drawLine = data => {\n  const line = d3Line().x(scaleXData).y(scaleYData).curve(curveMonotoneX);\n  select('.line-chart-line').attr('d', line(data));\n};\n\nconst buildAxes = () => {\n  select('.line-chart').append('g').attr('class', 'line-chart-yaxis');\n  select('.line-chart').append('g').attr('class', 'line-chart-xaxis');\n};\n\nconst buildLine = () => {\n  select('.line-chart').append('path').attr('class', 'line-chart-line');\n};\n\nconst xScale = scaleTime().domain([DateUtils.getStartOfMonth(new Date()), new Date()]).range([0, d3Config.maxChartWidth]);\nconst yScale = scaleLinear().domain([0, d3Config.defaultMaxYValue]).range([d3Config.maxChartHeight, 0]);\n\nconst scaleXData = point => {\n  return xScale(new Date(point.timestamp));\n};\n\nconst scaleYData = point => {\n  return yScale(point.value);\n};\n\nconst yAxis = axisLeft(yScale).ticks(5).tickFormat(format(d3Config.numberFormat));\nconst xAxis = axisBottom(xScale).ticks(5).tickFormat(timeFormat(d3Config.dateFormat));\nlet data = {\n  points: [[{\n    x: 0,\n    y: 20\n  }, {\n    x: 1,\n    y: 30\n  }, {\n    x: 2,\n    y: 10\n  }, {\n    x: 3,\n    y: 5\n  }, {\n    x: 4,\n    y: 8\n  }, {\n    x: 5,\n    y: 15\n  }, {\n    x: 6,\n    y: 10\n  }], [{\n    x: 0,\n    y: 8\n  }, {\n    x: 1,\n    y: 5\n  }, {\n    x: 2,\n    y: 20\n  }, {\n    x: 3,\n    y: 12\n  }, {\n    x: 4,\n    y: 4\n  }, {\n    x: 5,\n    y: 6\n  }, {\n    x: 6,\n    y: 2\n  }], [{\n    x: 0,\n    y: 0\n  }, {\n    x: 1,\n    y: 5\n  }, {\n    x: 2,\n    y: 8\n  }, {\n    x: 3,\n    y: 2\n  }, {\n    x: 4,\n    y: 6\n  }, {\n    x: 5,\n    y: 4\n  }, {\n    x: 6,\n    y: 2\n  }]],\n  xValues: [0, 1, 2, 3, 4, 5, 6],\n  yMin: 0,\n  yMax: 30\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.randomData = e => {\n      e.preventDefault();\n      this.setState(prevState => {\n        const data = prevState.data.map(d => ({\n          name: d.name,\n          value: Math.floor(Math.random() * 100 + 1)\n        }));\n        return {\n          data\n        };\n      });\n    };\n\n    this.state = {\n      settings: {},\n      name: \"\"\n    };\n  }\n\n  componentDidMount() {\n    monday.listen(\"settings\", res => {\n      this.setState({\n        settings: res.data\n      });\n    });\n    monday.listen(\"context\", res => {\n      this.setState({\n        context: res.data\n      });\n      console.log(res.data);\n      monday.api(`query ($boardIds: [Int]) { boards (ids:$boardIds) { name items(limit:1) { name column_values { title text } } } }`, {\n        variables: {\n          boardIds: this.state.context.boardIds\n        }\n      }).then(res => {\n        this.setState({\n          boardData: res.data\n        });\n      });\n    }); // {JSON.stringify(this.state.boardData, null, 2)}\n  }\n\n  returnLink() {\n    //return <form><input type=\"button\" value=\"Redirect Me\" onclick=\"Redirect\" /></form>;\n    return \"i\";\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: this.state.settings.background\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, this.drawAxes(), drawLine(data));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Jenny/OneDrive/Desktop/Makers/construction-helper-monday/view2/quickstart-react/src/App.js"],"names":["React","mondaySdk","d3Utils","DateUtils","d3Config","axisLeft","axisBottom","format","timeFormat","scaleTime","scaleLinear","select","curveMonotoneX","line","d3Line","monday","drawAxes","call","xAxis","yAxis","drawLine","data","x","scaleXData","y","scaleYData","curve","attr","buildAxes","append","buildLine","xScale","domain","getStartOfMonth","Date","range","maxChartWidth","yScale","defaultMaxYValue","maxChartHeight","point","timestamp","value","ticks","tickFormat","numberFormat","dateFormat","points","xValues","yMin","yMax","App","Component","constructor","props","randomData","e","preventDefault","setState","prevState","map","d","name","Math","floor","random","state","settings","componentDidMount","listen","res","context","console","log","api","variables","boardIds","then","boardData","returnLink","render","background"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport mondaySdk from \"monday-sdk-js\";\r\nimport d3Utils from './utils';\r\nimport { DateUtils } from \"react-day-picker\";\r\nimport d3Config from './config';\r\nimport {\r\n    axisLeft,\r\n    axisBottom,\r\n    format,\r\n    timeFormat,\r\n    scaleTime,\r\n    scaleLinear,\r\n    select, \r\n    curveMonotoneX, \r\n    line as d3Line, \r\n} from 'd3';\r\n\r\n\r\n\r\nconst monday = mondaySdk();\r\n\r\nconst drawAxes = () => {\r\n    select('.line-chart-xaxis')\r\n        .call(xAxis);\r\n\r\n    select('.line-chart-yaxis')\r\n        .call(yAxis);\r\n}\r\n\r\nconst drawLine = (data) => {\r\n    const line = d3Line()\r\n        .x(scaleXData)\r\n        .y(scaleYData)\r\n        .curve(curveMonotoneX);\r\n\r\n    select('.line-chart-line')\r\n        .attr('d', line(data));\r\n}\r\n\r\nconst buildAxes = () => {\r\n    select('.line-chart')\r\n        .append('g')\r\n        .attr('class', 'line-chart-yaxis');\r\n\r\n    select('.line-chart')\r\n        .append('g')\r\n        .attr('class', 'line-chart-xaxis')\r\n};\r\n\r\nconst buildLine = () => {\r\n    select('.line-chart')\r\n        .append('path')\r\n        .attr('class', 'line-chart-line')\r\n};\r\n\r\nconst xScale =\r\n    scaleTime()\r\n        .domain([DateUtils.getStartOfMonth(new Date()), new Date()])\r\n        .range([0, d3Config.maxChartWidth]);\r\n\r\nconst yScale =\r\n    scaleLinear()\r\n        .domain([0, d3Config.defaultMaxYValue])\r\n        .range([d3Config.maxChartHeight, 0]);\r\n\r\nconst scaleXData = (point) => {\r\n    return xScale(new Date(point.timestamp));\r\n}\r\n\r\nconst scaleYData = (point) => {\r\n    return yScale(point.value);\r\n}\r\n\r\nconst yAxis =\r\n    axisLeft(yScale)\r\n        .ticks(5)\r\n        .tickFormat(format(d3Config.numberFormat));\r\n\r\nconst xAxis =\r\n    axisBottom(xScale)\r\n        .ticks(5)\r\n        .tickFormat(timeFormat(d3Config.dateFormat));\r\n\r\nlet data = {\r\n    points: [\r\n        [{ x: 0, y: 20 }, { x: 1, y: 30 }, { x: 2, y: 10 }, { x: 3, y: 5 },\r\n        { x: 4, y: 8 }, { x: 5, y: 15 }, { x: 6, y: 10 }],\r\n        [{ x: 0, y: 8 }, { x: 1, y: 5 }, { x: 2, y: 20 }, { x: 3, y: 12 },\r\n        { x: 4, y: 4 }, { x: 5, y: 6 }, { x: 6, y: 2 }],\r\n        [{ x: 0, y: 0 }, { x: 1, y: 5 }, { x: 2, y: 8 }, { x: 3, y: 2 },\r\n        { x: 4, y: 6 }, { x: 5, y: 4 }, { x: 6, y: 2 }]\r\n    ],\r\n    xValues: [0, 1, 2, 3, 4, 5, 6],\r\n    yMin: 0,\r\n    yMax: 30\r\n};\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Default state\r\n        this.state = {\r\n            settings: {},\r\n            name: \"\",\r\n            \r\n        };\r\n    }\r\n\r\n    randomData = (e) => {\r\n        e.preventDefault();\r\n        this.setState((prevState) => {\r\n            const data = prevState.data.map(d => ({\r\n                name: d.name,\r\n                value: Math.floor((Math.random() * 100) + 1)\r\n            }))\r\n            return {\r\n                data\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        monday.listen(\"settings\", res => {\r\n            this.setState({ settings: res.data });\r\n        });\r\n\r\n        monday.listen(\"context\", res => {\r\n            this.setState({ context: res.data });\r\n            console.log(res.data);\r\n            monday.api(`query ($boardIds: [Int]) { boards (ids:$boardIds) { name items(limit:1) { name column_values { title text } } } }`,\r\n                { variables: { boardIds: this.state.context.boardIds } }\r\n            )\r\n                .then(res => {\r\n                    this.setState({ boardData: res.data });\r\n                });\r\n        })\r\n\r\n        // {JSON.stringify(this.state.boardData, null, 2)}\r\n    } \r\n \r\n\r\n   returnLink()\r\n   {\r\n       //return <form><input type=\"button\" value=\"Redirect Me\" onclick=\"Redirect\" /></form>;\r\n       return \"i\";\r\n   }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ background: (this.state.settings.background) }}>\r\n                {this.drawAxes()}\r\n                {drawLine(data)}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}