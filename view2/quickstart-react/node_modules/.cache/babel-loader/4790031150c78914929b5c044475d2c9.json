{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jenny\\\\OneDrive\\\\Desktop\\\\Makers\\\\construction-helper-monday\\\\view2\\\\quickstart-react\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nconst monday = mondaySdk();\nlet data = {\n  points: [[{\n    x: 0,\n    y: 20\n  }, {\n    x: 1,\n    y: 30\n  }, {\n    x: 2,\n    y: 10\n  }, {\n    x: 3,\n    y: 5\n  }, {\n    x: 4,\n    y: 8\n  }, {\n    x: 5,\n    y: 15\n  }, {\n    x: 6,\n    y: 10\n  }], [{\n    x: 0,\n    y: 8\n  }, {\n    x: 1,\n    y: 5\n  }, {\n    x: 2,\n    y: 20\n  }, {\n    x: 3,\n    y: 12\n  }, {\n    x: 4,\n    y: 4\n  }, {\n    x: 5,\n    y: 6\n  }, {\n    x: 6,\n    y: 2\n  }], [{\n    x: 0,\n    y: 0\n  }, {\n    x: 1,\n    y: 5\n  }, {\n    x: 2,\n    y: 8\n  }, {\n    x: 3,\n    y: 2\n  }, {\n    x: 4,\n    y: 6\n  }, {\n    x: 5,\n    y: 4\n  }, {\n    x: 6,\n    y: 2\n  }]],\n  xValues: [0, 1, 2, 3, 4, 5, 6],\n  yMin: 0,\n  yMax: 30\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.randomData = e => {\n      e.preventDefault();\n      this.setState(prevState => {\n        const data = prevState.data.map(d => ({\n          name: d.name,\n          value: Math.floor(Math.random() * 100 + 1)\n        }));\n        return {\n          data\n        };\n      });\n    };\n\n    this.state = {\n      settings: {},\n      name: \"\"\n    };\n  }\n\n  componentDidMount() {\n    monday.listen(\"settings\", res => {\n      this.setState({\n        settings: res.data\n      });\n    });\n    monday.listen(\"context\", res => {\n      this.setState({\n        context: res.data\n      });\n      console.log(res.data);\n      monday.api(`query ($boardIds: [Int]) { boards (ids:$boardIds) { name items(limit:1) { name column_values { title text } } } }`, {\n        variables: {\n          boardIds: this.state.context.boardIds\n        }\n      }).then(res => {\n        this.setState({\n          boardData: res.data\n        });\n      });\n    }); // {JSON.stringify(this.state.boardData, null, 2)}\n  }\n\n  returnLink() {\n    // set the dimensions and margins of the graph\n    var margin = {\n      top: 10,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n        width = 460 - margin.left - margin.right,\n        height = 400 - margin.top - margin.bottom; // append the svg object to the body of the page\n\n    var svg = d3.select(\"#my_dataviz\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); //Read the data\n\n    d3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered_comma.csv\", // When reading the csv, I must format variables:\n    function (d) {\n      return {\n        date: d3.timeParse(\"%Y-%m-%d\")(d.date),\n        value: d.value\n      };\n    }, // Now I can use this dataset:\n    function (data) {\n      // Add X axis --> it is a date format\n      var x = d3.scaleTime().domain(d3.extent(data, function (d) {\n        return d.date;\n      })).range([0, width]);\n      svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // Add Y axis\n\n      var y = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n        return +d.value;\n      })]).range([height, 0]);\n      svg.append(\"g\").call(d3.axisLeft(y)); // Add the line\n\n      svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n        return x(d.date);\n      }).y(function (d) {\n        return y(d.value);\n      }));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: this.state.settings.background\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, this.returnLink());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Jenny/OneDrive/Desktop/Makers/construction-helper-monday/view2/quickstart-react/src/App.js"],"names":["React","mondaySdk","monday","data","points","x","y","xValues","yMin","yMax","App","Component","constructor","props","randomData","e","preventDefault","setState","prevState","map","d","name","value","Math","floor","random","state","settings","componentDidMount","listen","res","context","console","log","api","variables","boardIds","then","boardData","returnLink","margin","top","right","bottom","left","width","height","svg","d3","select","append","attr","csv","date","timeParse","scaleTime","domain","extent","range","call","axisBottom","scaleLinear","max","axisLeft","datum","line","render","background"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport mondaySdk from \"monday-sdk-js\";\r\nconst monday = mondaySdk();\r\n\r\n\r\nlet data = {\r\n    points: [\r\n        [{ x: 0, y: 20 }, { x: 1, y: 30 }, { x: 2, y: 10 }, { x: 3, y: 5 },\r\n        { x: 4, y: 8 }, { x: 5, y: 15 }, { x: 6, y: 10 }],\r\n        [{ x: 0, y: 8 }, { x: 1, y: 5 }, { x: 2, y: 20 }, { x: 3, y: 12 },\r\n        { x: 4, y: 4 }, { x: 5, y: 6 }, { x: 6, y: 2 }],\r\n        [{ x: 0, y: 0 }, { x: 1, y: 5 }, { x: 2, y: 8 }, { x: 3, y: 2 },\r\n        { x: 4, y: 6 }, { x: 5, y: 4 }, { x: 6, y: 2 }]\r\n    ],\r\n    xValues: [0, 1, 2, 3, 4, 5, 6],\r\n    yMin: 0,\r\n    yMax: 30\r\n};\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Default state\r\n        this.state = {\r\n            settings: {},\r\n            name: \"\",\r\n            \r\n        };\r\n    }\r\n\r\n    randomData = (e) => {\r\n        e.preventDefault();\r\n        this.setState((prevState) => {\r\n            const data = prevState.data.map(d => ({\r\n                name: d.name,\r\n                value: Math.floor((Math.random() * 100) + 1)\r\n            }))\r\n            return {\r\n                data\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        monday.listen(\"settings\", res => {\r\n            this.setState({ settings: res.data });\r\n        });\r\n\r\n        monday.listen(\"context\", res => {\r\n            this.setState({ context: res.data });\r\n            console.log(res.data);\r\n            monday.api(`query ($boardIds: [Int]) { boards (ids:$boardIds) { name items(limit:1) { name column_values { title text } } } }`,\r\n                { variables: { boardIds: this.state.context.boardIds } }\r\n            )\r\n                .then(res => {\r\n                    this.setState({ boardData: res.data });\r\n                });\r\n        })\r\n\r\n        // {JSON.stringify(this.state.boardData, null, 2)}\r\n    } \r\n \r\n\r\n   returnLink()\r\n   {\r\n       // set the dimensions and margins of the graph\r\n       var margin = { top: 10, right: 30, bottom: 30, left: 60 },\r\n           width = 460 - margin.left - margin.right,\r\n           height = 400 - margin.top - margin.bottom;\r\n\r\n       // append the svg object to the body of the page\r\n       var svg = d3.select(\"#my_dataviz\")\r\n           .append(\"svg\")\r\n           .attr(\"width\", width + margin.left + margin.right)\r\n           .attr(\"height\", height + margin.top + margin.bottom)\r\n           .append(\"g\")\r\n           .attr(\"transform\",\r\n               \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n       //Read the data\r\n       d3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered_comma.csv\",\r\n\r\n           // When reading the csv, I must format variables:\r\n           function (d) {\r\n               return { date: d3.timeParse(\"%Y-%m-%d\")(d.date), value: d.value }\r\n           },\r\n\r\n           // Now I can use this dataset:\r\n           function (data) {\r\n\r\n               // Add X axis --> it is a date format\r\n               var x = d3.scaleTime()\r\n                   .domain(d3.extent(data, function (d) { return d.date; }))\r\n                   .range([0, width]);\r\n               svg.append(\"g\")\r\n                   .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n                   .call(d3.axisBottom(x));\r\n\r\n               // Add Y axis\r\n               var y = d3.scaleLinear()\r\n                   .domain([0, d3.max(data, function (d) { return +d.value; })])\r\n                   .range([height, 0]);\r\n               svg.append(\"g\")\r\n                   .call(d3.axisLeft(y));\r\n\r\n               // Add the line\r\n               svg.append(\"path\")\r\n                   .datum(data)\r\n                   .attr(\"fill\", \"none\")\r\n                   .attr(\"stroke\", \"steelblue\")\r\n                   .attr(\"stroke-width\", 1.5)\r\n                   .attr(\"d\", d3.line()\r\n                       .x(function (d) { return x(d.date) })\r\n                       .y(function (d) { return y(d.value) })\r\n                   )\r\n\r\n           })\r\n\r\n   }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ background: (this.state.settings.background) }}>\r\n                {this.returnLink()}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}