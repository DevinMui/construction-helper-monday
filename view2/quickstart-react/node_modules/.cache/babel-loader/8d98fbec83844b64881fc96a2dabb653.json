{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jenny\\\\OneDrive\\\\Desktop\\\\Makers\\\\construction-helper-monday\\\\view2\\\\quickstart-react\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { LineChart } from \"react-d3-components\";\nimport mondaySdk from \"monday-sdk-js\";\nimport { Card } from '@material-ui/core';\nconst monday = mondaySdk();\nlet data = [{\n  label: 'date',\n  values: [{\n    x: 0,\n    y: 2\n  }, {\n    x: 1.3,\n    y: 5\n  }, {\n    x: 3,\n    y: 6\n  }, {\n    x: 3.5,\n    y: 6.5\n  }, {\n    x: 4,\n    y: 6\n  }, {\n    x: 4.5,\n    y: 6\n  }, {\n    x: 5,\n    y: 7\n  }, {\n    x: 5.5,\n    y: 8\n  }]\n}];\n\nvar tooltipScatter = function (x, y) {\n  return \"x: \" + x + \" y: \" + y;\n};\n\nvar variable = \"\";\nmonday.api('query { boards(ids: [878537780]) { items { name group { id } column_values { id value text }  } }}').then(res => {\n  variable = res;\n});\nconsole.log(variable);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // Default state\n\n    this.randomData = e => {\n      e.preventDefault();\n      this.setState(prevState => {\n        const data = prevState.data.map(d => ({\n          name: d.name,\n          value: Math.floor(Math.random() * 100 + 1)\n        }));\n        return {\n          data\n        };\n      });\n    };\n\n    this.state = {\n      settings: {},\n      name: \"\"\n    };\n  }\n\n  componentDidMount() {\n    monday.listen(\"settings\", res => {\n      this.setState({\n        settings: res.data\n      });\n    });\n    monday.listen(\"context\", res => {\n      this.setState({\n        context: res.data\n      });\n      console.log(res.data);\n      monday.api(`query ($boardIds: [Int]) { boards (ids:$boardIds) { name items(limit:1) { name column_values { title text } } } }`, {\n        variables: {\n          boardIds: this.state.context.boardIds\n        }\n      }).then(res => {\n        this.setState({\n          boardData: res.data\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: this.state.settings.background,\n        paddingLeft: 100,\n        paddingTop: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, JSON.stringify(variable), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: 500,\n        float: \"left\"\n      },\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        paddingLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Price Fluxuations over Time\"), /*#__PURE__*/React.createElement(LineChart, {\n      data: data,\n      width: 300,\n      height: 300,\n      margin: {\n        top: 10,\n        bottom: 50,\n        left: 50,\n        right: 10\n      },\n      tooltipHtml: tooltipScatter,\n      xAxis: {\n        label: \"time in days\"\n      },\n      yAxis: {\n        label: \"hundreds of dollars\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Jenny/OneDrive/Desktop/Makers/construction-helper-monday/view2/quickstart-react/src/App.js"],"names":["React","LineChart","mondaySdk","Card","monday","data","label","values","x","y","tooltipScatter","variable","api","then","res","console","log","App","Component","constructor","props","randomData","e","preventDefault","setState","prevState","map","d","name","value","Math","floor","random","state","settings","componentDidMount","listen","context","variables","boardIds","boardData","render","background","paddingLeft","paddingTop","JSON","stringify","width","float","top","bottom","left","right"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport { LineChart } from \"react-d3-components\";\r\nimport mondaySdk from \"monday-sdk-js\";\r\nimport { Card } from '@material-ui/core';\r\n\r\nconst monday = mondaySdk();\r\nlet data = [\r\n    {\r\n        label: 'date',\r\n        values: [{ x: 0, y: 2 }, { x: 1.3, y: 5 }, { x: 3, y: 6 }, { x: 3.5, y: 6.5 }, { x: 4, y: 6 }, { x: 4.5, y: 6 }, { x: 5, y: 7 }, { x: 5.5, y: 8 }]\r\n    },\r\n    \r\n];\r\nvar tooltipScatter = function (x, y) {\r\n    return \"x: \" + x + \" y: \" + y;\r\n};\r\n\r\nvar variable = \"\";\r\n\r\nmonday.api('query { boards(ids: [878537780]) { items { name group { id } column_values { id value text }  } }}').then(res => { variable = res; });\r\nconsole.log(variable);\r\n\r\nclass App extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Default state\r\n        this.state = {\r\n            settings: {},\r\n            name: \"\",\r\n            \r\n        };\r\n    }\r\n\r\n    randomData = (e) => {\r\n        e.preventDefault();\r\n        this.setState((prevState) => {\r\n            const data = prevState.data.map(d => ({\r\n                name: d.name,\r\n                value: Math.floor((Math.random() * 100) + 1)\r\n            }))\r\n            return {\r\n                data\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        monday.listen(\"settings\", res => {\r\n            this.setState({ settings: res.data });\r\n        });\r\n\r\n        monday.listen(\"context\", res => {\r\n            this.setState({ context: res.data });\r\n            console.log(res.data);\r\n            monday.api(`query ($boardIds: [Int]) { boards (ids:$boardIds) { name items(limit:1) { name column_values { title text } } } }`,\r\n                { variables: { boardIds: this.state.context.boardIds } }\r\n            )\r\n                .then(res => {\r\n                    this.setState({ boardData: res.data });\r\n                });\r\n        })\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <div style={{ background: (this.state.settings.background), paddingLeft: 100, paddingTop: 100 }}>\r\n                {JSON.stringify(variable)}\r\n                <Card style={{ width: 500, float: \"left\" }} variant=\"outlined\">\r\n                    <h1 style={{ paddingLeft: 10 }}>\r\n                        Price Fluxuations over Time\r\n                    </h1>\r\n                    <LineChart\r\n                        data={data}\r\n                        width={300}\r\n                        height={300}\r\n                        margin={{ top: 10, bottom: 50, left: 50, right: 10 }}\r\n                        tooltipHtml={tooltipScatter}\r\n                        xAxis={{ label: \"time in days\" }}\r\n                        yAxis={{ label: \"hundreds of dollars\" }}\r\n                    />\r\n                </Card>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}