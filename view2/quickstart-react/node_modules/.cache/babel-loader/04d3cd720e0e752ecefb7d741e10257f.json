{"ast":null,"code":"import React, { memo, useMemo, useCallback, useRef, useState, useEffect } from 'react';\nimport { boxAlignments, alignBox, withContainer, useTheme, useDimensions, useValueFormatter, SvgWrapper, ResponsiveWrapper, degreesToRadians, isCursorInRect, getRelativeCursor } from '@nivo/core';\nimport { LegendPropShape, BoxLegendSvg, renderLegendToCanvas } from '@nivo/legends';\nimport PropTypes from 'prop-types';\nimport { timeFormat } from 'd3-time-format';\nimport { BasicTooltip, useTooltip } from '@nivo/tooltip';\nimport { scaleQuantize } from 'd3-scale';\nimport memoize from 'lodash.memoize';\nimport isDate from 'lodash.isdate';\nimport range from 'lodash.range';\nimport { timeWeeks, timeDays, timeMonths, timeWeek, timeYear } from 'd3-time';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar CalendarTooltip = memo(function (_ref) {\n  var value = _ref.value,\n      day = _ref.day,\n      color = _ref.color;\n  if (value === undefined || isNaN(value)) return null;\n  return React.createElement(BasicTooltip, {\n    id: day,\n    value: value,\n    color: color,\n    enableChip: true\n  });\n});\nCalendarTooltip.displayName = 'CalendarTooltip';\nvar monthLabelFormat = timeFormat('%b');\nvar commonPropTypes = {\n  from: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]).isRequired,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]).isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    day: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })).isRequired,\n  align: PropTypes.oneOf(boxAlignments).isRequired,\n  minValue: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  maxValue: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  colorScale: PropTypes.func,\n  direction: PropTypes.oneOf(['horizontal', 'vertical']),\n  emptyColor: PropTypes.string.isRequired,\n  yearLegend: PropTypes.func.isRequired,\n  yearSpacing: PropTypes.number.isRequired,\n  yearLegendPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n  yearLegendOffset: PropTypes.number.isRequired,\n  monthBorderWidth: PropTypes.number.isRequired,\n  monthBorderColor: PropTypes.string.isRequired,\n  monthLegend: PropTypes.func.isRequired,\n  monthSpacing: PropTypes.number.isRequired,\n  monthLegendPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n  monthLegendOffset: PropTypes.number.isRequired,\n  daySpacing: PropTypes.number.isRequired,\n  dayBorderWidth: PropTypes.number.isRequired,\n  dayBorderColor: PropTypes.string.isRequired,\n  isInteractive: PropTypes.bool,\n  onClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  valueFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  legendFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  legends: PropTypes.arrayOf(PropTypes.shape(_objectSpread2(_objectSpread2({}, LegendPropShape), {}, {\n    itemCount: PropTypes.number.isRequired\n  }))).isRequired\n};\n\nvar CalendarPropTypes = _objectSpread2(_objectSpread2({}, commonPropTypes), {}, {\n  role: PropTypes.string.isRequired\n});\n\nvar CalendarCanvasPropTypes = _objectSpread2(_objectSpread2({}, commonPropTypes), {}, {\n  pixelRatio: PropTypes.number.isRequired\n});\n\nvar commonDefaultProps = {\n  colors: ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560'],\n  align: 'center',\n  direction: 'horizontal',\n  emptyColor: '#fff',\n  minValue: 0,\n  maxValue: 'auto',\n  yearSpacing: 30,\n  yearLegend: function yearLegend(year) {\n    return year;\n  },\n  yearLegendPosition: 'before',\n  yearLegendOffset: 10,\n  monthBorderWidth: 2,\n  monthBorderColor: '#000',\n  monthSpacing: 0,\n  monthLegend: function monthLegend(year, month, date) {\n    return monthLabelFormat(date);\n  },\n  monthLegendPosition: 'before',\n  monthLegendOffset: 10,\n  weekdayLegend: function weekdayLegend(d) {\n    return d;\n  },\n  daySpacing: 0,\n  dayBorderWidth: 1,\n  dayBorderColor: '#000',\n  isInteractive: true,\n  legends: [],\n  tooltip: CalendarTooltip\n};\n\nvar CalendarDefaultProps = _objectSpread2(_objectSpread2({}, commonDefaultProps), {}, {\n  role: 'img'\n});\n\nvar CalendarCanvasDefaultProps = _objectSpread2(_objectSpread2({}, commonDefaultProps), {}, {\n  pixelRatio: global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1\n});\n\nvar CalendarYearLegends = memo(function (_ref) {\n  var years = _ref.years,\n      legend = _ref.legend,\n      theme = _ref.theme;\n  return React.createElement(React.Fragment, null, years.map(function (year) {\n    return React.createElement(\"text\", {\n      key: year.year,\n      transform: \"translate(\".concat(year.x, \",\").concat(year.y, \") rotate(\").concat(year.rotation, \")\"),\n      textAnchor: \"middle\",\n      style: theme.labels.text\n    }, legend(year.year));\n  }));\n});\nCalendarYearLegends.displayName = 'CalendarYearLegends';\nvar CalendarMonthPath = memo(function (_ref) {\n  var path = _ref.path,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor;\n  return React.createElement(\"path\", {\n    d: path,\n    style: {\n      fill: 'none',\n      strokeWidth: borderWidth,\n      stroke: borderColor,\n      pointerEvents: 'none'\n    }\n  });\n});\nCalendarMonthPath.displayName = 'CalendarMonthPath';\nvar CalendarMonthLegends = memo(function (_ref) {\n  var months = _ref.months,\n      legend = _ref.legend,\n      theme = _ref.theme;\n  return React.createElement(React.Fragment, null, months.map(function (month) {\n    return React.createElement(\"text\", {\n      key: \"\".concat(month.date.toString(), \".legend\"),\n      transform: \"translate(\".concat(month.x, \",\").concat(month.y, \") rotate(\").concat(month.rotation, \")\"),\n      textAnchor: \"middle\",\n      style: theme.labels.text\n    }, legend(month.year, month.month, month.date));\n  }));\n});\nCalendarMonthLegends.displayName = 'CalendarMonthLegends';\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nvar computeDomain = function computeDomain(data, minSpec, maxSpec) {\n  var allValues = data.map(function (d) {\n    return d.value;\n  });\n  var minValue = minSpec === 'auto' ? Math.min.apply(Math, _toConsumableArray(allValues)) : minSpec;\n  var maxValue = maxSpec === 'auto' ? Math.max.apply(Math, _toConsumableArray(allValues)) : maxSpec;\n  return [minValue, maxValue];\n};\n\nvar computeCellSize = function computeCellSize(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      direction = _ref.direction,\n      yearRange = _ref.yearRange,\n      yearSpacing = _ref.yearSpacing,\n      monthSpacing = _ref.monthSpacing,\n      daySpacing = _ref.daySpacing,\n      maxWeeks = _ref.maxWeeks;\n  var hCellSize;\n  var vCellSize;\n\n  if (direction === 'horizontal') {\n    hCellSize = (width - monthSpacing * 12 - daySpacing * maxWeeks) / maxWeeks;\n    vCellSize = (height - (yearRange.length - 1) * yearSpacing - yearRange.length * (8 * daySpacing)) / (yearRange.length * 7);\n  } else {\n    hCellSize = (width - (yearRange.length - 1) * yearSpacing - yearRange.length * (8 * daySpacing)) / (yearRange.length * 7);\n    vCellSize = (height - monthSpacing * 12 - daySpacing * maxWeeks) / maxWeeks;\n  }\n\n  return Math.min(hCellSize, vCellSize);\n};\n\nvar monthPathAndBBox = function monthPathAndBBox(_ref2) {\n  var date = _ref2.date,\n      cellSize = _ref2.cellSize,\n      yearIndex = _ref2.yearIndex,\n      yearSpacing = _ref2.yearSpacing,\n      monthSpacing = _ref2.monthSpacing,\n      daySpacing = _ref2.daySpacing,\n      direction = _ref2.direction,\n      originX = _ref2.originX,\n      originY = _ref2.originY;\n  var t1 = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  var firstWeek = timeWeek.count(timeYear(date), date);\n  var lastWeek = timeWeek.count(timeYear(t1), t1);\n  var firstDay = date.getDay();\n  var lastDay = t1.getDay();\n  var xO = originX;\n  var yO = originY;\n  var yearOffset = yearIndex * (7 * (cellSize + daySpacing) + yearSpacing);\n  var monthOffset = date.getMonth() * monthSpacing;\n\n  if (direction === 'horizontal') {\n    yO += yearOffset;\n    xO += monthOffset;\n  } else {\n    yO += monthOffset;\n    xO += yearOffset;\n  }\n\n  var path;\n  var bbox = {\n    x: xO,\n    y: yO,\n    width: 0,\n    height: 0\n  };\n\n  if (direction === 'horizontal') {\n    path = [\"M\".concat(xO + (firstWeek + 1) * (cellSize + daySpacing), \",\").concat(yO + firstDay * (cellSize + daySpacing)), \"H\".concat(xO + firstWeek * (cellSize + daySpacing), \"V\").concat(yO + 7 * (cellSize + daySpacing)), \"H\".concat(xO + lastWeek * (cellSize + daySpacing), \"V\").concat(yO + (lastDay + 1) * (cellSize + daySpacing)), \"H\".concat(xO + (lastWeek + 1) * (cellSize + daySpacing), \"V\").concat(yO), \"H\".concat(xO + (firstWeek + 1) * (cellSize + daySpacing), \"Z\")].join('');\n    bbox.x = xO + firstWeek * (cellSize + daySpacing);\n    bbox.width = xO + (lastWeek + 1) * (cellSize + daySpacing) - bbox.x;\n    bbox.height = 7 * (cellSize + daySpacing);\n  } else {\n    path = [\"M\".concat(xO + firstDay * (cellSize + daySpacing), \",\").concat(yO + (firstWeek + 1) * (cellSize + daySpacing)), \"H\".concat(xO, \"V\").concat(yO + (lastWeek + 1) * (cellSize + daySpacing)), \"H\".concat(xO + (lastDay + 1) * (cellSize + daySpacing), \"V\").concat(yO + lastWeek * (cellSize + daySpacing)), \"H\".concat(xO + 7 * (cellSize + daySpacing), \"V\").concat(yO + firstWeek * (cellSize + daySpacing)), \"H\".concat(xO + firstDay * (cellSize + daySpacing), \"Z\")].join('');\n    bbox.y = yO + firstWeek * (cellSize + daySpacing);\n    bbox.width = 7 * (cellSize + daySpacing);\n    bbox.height = yO + (lastWeek + 1) * (cellSize + daySpacing) - bbox.y;\n  }\n\n  return {\n    path: path,\n    bbox: bbox\n  };\n};\n\nvar memoMonthPathAndBBox = memoize(monthPathAndBBox, function (_ref3) {\n  var date = _ref3.date,\n      cellSize = _ref3.cellSize,\n      yearIndex = _ref3.yearIndex,\n      yearSpacing = _ref3.yearSpacing,\n      monthSpacing = _ref3.monthSpacing,\n      daySpacing = _ref3.daySpacing,\n      direction = _ref3.direction,\n      originX = _ref3.originX,\n      originY = _ref3.originY;\n  return \"\".concat(date.toString(), \".\").concat(cellSize, \".\").concat(yearIndex, \".\").concat(yearSpacing, \".\").concat(monthSpacing, \".\").concat(daySpacing, \".\").concat(direction, \".\").concat(originX, \".\").concat(originY);\n});\n\nvar cellPositionHorizontal = function cellPositionHorizontal(cellSize, yearSpacing, monthSpacing, daySpacing) {\n  return function (originX, originY, d, yearIndex) {\n    var weekOfYear = timeWeek.count(timeYear(d), d);\n    return {\n      x: originX + weekOfYear * (cellSize + daySpacing) + daySpacing / 2 + d.getMonth() * monthSpacing,\n      y: originY + d.getDay() * (cellSize + daySpacing) + daySpacing / 2 + yearIndex * (yearSpacing + 7 * (cellSize + daySpacing))\n    };\n  };\n};\n\nvar cellPositionVertical = function cellPositionVertical(cellSize, yearSpacing, monthSpacing, daySpacing) {\n  return function (originX, originY, d, yearIndex) {\n    var weekOfYear = timeWeek.count(timeYear(d), d);\n    return {\n      x: originX + d.getDay() * (cellSize + daySpacing) + daySpacing / 2 + yearIndex * (yearSpacing + 7 * (cellSize + daySpacing)),\n      y: originY + weekOfYear * (cellSize + daySpacing) + daySpacing / 2 + d.getMonth() * monthSpacing\n    };\n  };\n};\n\nvar dayFormat = timeFormat('%Y-%m-%d');\n\nvar computeLayout = function computeLayout(_ref4) {\n  var width = _ref4.width,\n      height = _ref4.height,\n      from = _ref4.from,\n      to = _ref4.to,\n      direction = _ref4.direction,\n      yearSpacing = _ref4.yearSpacing,\n      monthSpacing = _ref4.monthSpacing,\n      daySpacing = _ref4.daySpacing,\n      align = _ref4.align;\n  var fromDate = isDate(from) ? from : new Date(from);\n  var toDate = isDate(to) ? to : new Date(to);\n  var yearRange = range(fromDate.getFullYear(), toDate.getFullYear() + 1);\n  var maxWeeks = Math.max.apply(Math, _toConsumableArray(yearRange.map(function (year) {\n    return timeWeeks(new Date(year, 0, 1), new Date(year + 1, 0, 1)).length;\n  }))) + 1;\n  var cellSize = computeCellSize({\n    width: width,\n    height: height,\n    direction: direction,\n    yearRange: yearRange,\n    yearSpacing: yearSpacing,\n    monthSpacing: monthSpacing,\n    daySpacing: daySpacing,\n    maxWeeks: maxWeeks\n  });\n  var monthsSize = cellSize * maxWeeks + daySpacing * maxWeeks + monthSpacing * 12;\n  var yearsSize = (cellSize + daySpacing) * 7 * yearRange.length + yearSpacing * (yearRange.length - 1);\n  var calendarWidth = direction === 'horizontal' ? monthsSize : yearsSize;\n  var calendarHeight = direction === 'horizontal' ? yearsSize : monthsSize;\n\n  var _alignBox = alignBox({\n    x: 0,\n    y: 0,\n    width: calendarWidth,\n    height: calendarHeight\n  }, {\n    x: 0,\n    y: 0,\n    width: width,\n    height: height\n  }, align),\n      _alignBox2 = _slicedToArray(_alignBox, 2),\n      originX = _alignBox2[0],\n      originY = _alignBox2[1];\n\n  var cellPosition;\n\n  if (direction === 'horizontal') {\n    cellPosition = cellPositionHorizontal(cellSize, yearSpacing, monthSpacing, daySpacing);\n  } else {\n    cellPosition = cellPositionVertical(cellSize, yearSpacing, monthSpacing, daySpacing);\n  }\n\n  var years = [];\n  var months = [];\n  var days = [];\n  yearRange.forEach(function (year, i) {\n    var yearStart = new Date(year, 0, 1);\n    var yearEnd = new Date(year + 1, 0, 1);\n    days = days.concat(timeDays(yearStart, yearEnd).map(function (dayDate) {\n      return _objectSpread2({\n        date: dayDate,\n        day: dayFormat(dayDate),\n        size: cellSize\n      }, cellPosition(originX, originY, dayDate, i));\n    }));\n    var yearMonths = timeMonths(yearStart, yearEnd).map(function (monthDate) {\n      return _objectSpread2({\n        date: monthDate,\n        year: monthDate.getFullYear(),\n        month: monthDate.getMonth()\n      }, memoMonthPathAndBBox({\n        originX: originX,\n        originY: originY,\n        date: monthDate,\n        direction: direction,\n        yearIndex: i,\n        yearSpacing: yearSpacing,\n        monthSpacing: monthSpacing,\n        daySpacing: daySpacing,\n        cellSize: cellSize\n      }));\n    });\n    months = months.concat(yearMonths);\n    years.push({\n      year: year,\n      bbox: {\n        x: yearMonths[0].bbox.x,\n        y: yearMonths[0].bbox.y,\n        width: yearMonths[11].bbox.x - yearMonths[0].bbox.x + yearMonths[11].bbox.width,\n        height: yearMonths[11].bbox.y - yearMonths[0].bbox.y + yearMonths[11].bbox.height\n      }\n    });\n  });\n  return {\n    years: years,\n    months: months,\n    days: days,\n    cellSize: cellSize,\n    calendarWidth: calendarWidth,\n    calendarHeight: calendarHeight,\n    originX: originX,\n    originY: originY\n  };\n};\n\nvar bindDaysData = function bindDaysData(_ref5) {\n  var days = _ref5.days,\n      data = _ref5.data,\n      colorScale = _ref5.colorScale,\n      emptyColor = _ref5.emptyColor;\n  return days.map(function (day) {\n    var dayData = data.find(function (item) {\n      return item.day === day.day;\n    });\n\n    if (!dayData) {\n      return _objectSpread2(_objectSpread2({}, day), {}, {\n        color: emptyColor\n      });\n    }\n\n    return _objectSpread2(_objectSpread2({}, day), {}, {\n      color: colorScale(dayData.value),\n      data: dayData,\n      value: dayData.value\n    });\n  });\n};\n\nvar computeYearLegendPositions = function computeYearLegendPositions(_ref6) {\n  var years = _ref6.years,\n      direction = _ref6.direction,\n      position = _ref6.position,\n      offset = _ref6.offset;\n  return years.map(function (year) {\n    var x = 0;\n    var y = 0;\n    var rotation = 0;\n\n    if (direction === 'horizontal' && position === 'before') {\n      x = year.bbox.x - offset;\n      y = year.bbox.y + year.bbox.height / 2;\n      rotation = -90;\n    } else if (direction === 'horizontal' && position === 'after') {\n      x = year.bbox.x + year.bbox.width + offset;\n      y = year.bbox.y + year.bbox.height / 2;\n      rotation = -90;\n    } else if (direction === 'vertical' && position === 'before') {\n      x = year.bbox.x + year.bbox.width / 2;\n      y = year.bbox.y - offset;\n    } else {\n      x = year.bbox.x + year.bbox.width / 2;\n      y = year.bbox.y + year.bbox.height + offset;\n    }\n\n    return _objectSpread2(_objectSpread2({}, year), {}, {\n      x: x,\n      y: y,\n      rotation: rotation\n    });\n  });\n};\n\nvar computeMonthLegendPositions = function computeMonthLegendPositions(_ref7) {\n  var months = _ref7.months,\n      direction = _ref7.direction,\n      position = _ref7.position,\n      offset = _ref7.offset;\n  return months.map(function (month) {\n    var x = 0;\n    var y = 0;\n    var rotation = 0;\n\n    if (direction === 'horizontal' && position === 'before') {\n      x = month.bbox.x + month.bbox.width / 2;\n      y = month.bbox.y - offset;\n    } else if (direction === 'horizontal' && position === 'after') {\n      x = month.bbox.x + month.bbox.width / 2;\n      y = month.bbox.y + month.bbox.height + offset;\n    } else if (direction === 'vertical' && position === 'before') {\n      x = month.bbox.x - offset;\n      y = month.bbox.y + month.bbox.height / 2;\n      rotation = -90;\n    } else {\n      x = month.bbox.x + month.bbox.width + offset;\n      y = month.bbox.y + month.bbox.height / 2;\n      rotation = -90;\n    }\n\n    return _objectSpread2(_objectSpread2({}, month), {}, {\n      x: x,\n      y: y,\n      rotation: rotation\n    });\n  });\n};\n\nvar useCalendarLayout = function useCalendarLayout(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      from = _ref.from,\n      to = _ref.to,\n      direction = _ref.direction,\n      yearSpacing = _ref.yearSpacing,\n      monthSpacing = _ref.monthSpacing,\n      daySpacing = _ref.daySpacing,\n      align = _ref.align;\n  return useMemo(function () {\n    return computeLayout({\n      width: width,\n      height: height,\n      from: from,\n      to: to,\n      direction: direction,\n      yearSpacing: yearSpacing,\n      monthSpacing: monthSpacing,\n      daySpacing: daySpacing,\n      align: align\n    });\n  }, [width, height, from, to, direction, yearSpacing, monthSpacing, daySpacing, align]);\n};\n\nvar useColorScale = function useColorScale(_ref2) {\n  var data = _ref2.data,\n      minValue = _ref2.minValue,\n      maxValue = _ref2.maxValue,\n      colors = _ref2.colors,\n      colorScale = _ref2.colorScale;\n  return useMemo(function () {\n    if (colorScale) return colorScale;\n    var domain = computeDomain(data, minValue, maxValue);\n    var defaultColorScale = scaleQuantize().domain(domain).range(colors);\n    return defaultColorScale;\n  }, [data, minValue, maxValue, colors, colorScale]);\n};\n\nvar useYearLegends = function useYearLegends(_ref3) {\n  var years = _ref3.years,\n      direction = _ref3.direction,\n      yearLegendPosition = _ref3.yearLegendPosition,\n      yearLegendOffset = _ref3.yearLegendOffset;\n  return useMemo(function () {\n    return computeYearLegendPositions({\n      years: years,\n      direction: direction,\n      position: yearLegendPosition,\n      offset: yearLegendOffset\n    });\n  }, [years, direction, yearLegendPosition, yearLegendOffset]);\n};\n\nvar useMonthLegends = function useMonthLegends(_ref4) {\n  var months = _ref4.months,\n      direction = _ref4.direction,\n      monthLegendPosition = _ref4.monthLegendPosition,\n      monthLegendOffset = _ref4.monthLegendOffset;\n  return useMemo(function () {\n    return computeMonthLegendPositions({\n      months: months,\n      direction: direction,\n      position: monthLegendPosition,\n      offset: monthLegendOffset\n    });\n  }, [months, direction, monthLegendPosition, monthLegendOffset]);\n};\n\nvar useDays = function useDays(_ref5) {\n  var days = _ref5.days,\n      data = _ref5.data,\n      colorScale = _ref5.colorScale,\n      emptyColor = _ref5.emptyColor;\n  return useMemo(function () {\n    return bindDaysData({\n      days: days,\n      data: data,\n      colorScale: colorScale,\n      emptyColor: emptyColor\n    });\n  }, [days, data, colorScale, emptyColor]);\n};\n\nvar CalendarDay = memo(function (_ref) {\n  var data = _ref.data,\n      x = _ref.x,\n      y = _ref.y,\n      size = _ref.size,\n      color = _ref.color,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      isInteractive = _ref.isInteractive,\n      tooltip = _ref.tooltip,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseMove = _ref.onMouseMove,\n      onMouseLeave = _ref.onMouseLeave,\n      onClick = _ref.onClick,\n      formatValue = _ref.formatValue;\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var handleMouseEnter = useCallback(function (event) {\n    var formatedData = _objectSpread2(_objectSpread2({}, data), {}, {\n      value: formatValue(data.value),\n      data: _objectSpread2({}, data.data)\n    });\n\n    showTooltipFromEvent(React.createElement(tooltip, _objectSpread2({}, formatedData)), event);\n    onMouseEnter && onMouseEnter(data, event);\n  }, [showTooltipFromEvent, tooltip, data, onMouseEnter, formatValue]);\n  var handleMouseMove = useCallback(function (event) {\n    var formatedData = _objectSpread2(_objectSpread2({}, data), {}, {\n      value: formatValue(data.value),\n      data: _objectSpread2({}, data.data)\n    });\n\n    showTooltipFromEvent(React.createElement(tooltip, _objectSpread2({}, formatedData)), event);\n    onMouseMove && onMouseMove(data, event);\n  }, [showTooltipFromEvent, tooltip, data, onMouseMove, formatValue]);\n  var handleMouseLeave = useCallback(function (event) {\n    hideTooltip();\n    onMouseLeave && onMouseLeave(data, event);\n  }, [isInteractive, hideTooltip, data, onMouseLeave]);\n  var handleClick = useCallback(function (event) {\n    return onClick && onClick(data, event);\n  }, [isInteractive, data, onClick]);\n  return React.createElement(\"rect\", {\n    x: x,\n    y: y,\n    width: size,\n    height: size,\n    style: {\n      fill: color,\n      strokeWidth: borderWidth,\n      stroke: borderColor\n    },\n    onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n    onMouseMove: isInteractive ? handleMouseMove : undefined,\n    onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n    onClick: isInteractive ? handleClick : undefined\n  });\n});\nCalendarDay.displayName = 'CalendarDay';\n\nvar Calendar = function Calendar(_ref) {\n  var partialMargin = _ref.margin,\n      width = _ref.width,\n      height = _ref.height,\n      align = _ref.align,\n      colors = _ref.colors,\n      colorScale = _ref.colorScale,\n      data = _ref.data,\n      direction = _ref.direction,\n      emptyColor = _ref.emptyColor,\n      from = _ref.from,\n      to = _ref.to,\n      minValue = _ref.minValue,\n      maxValue = _ref.maxValue,\n      valueFormat = _ref.valueFormat,\n      legendFormat = _ref.legendFormat,\n      yearLegend = _ref.yearLegend,\n      yearLegendOffset = _ref.yearLegendOffset,\n      yearLegendPosition = _ref.yearLegendPosition,\n      yearSpacing = _ref.yearSpacing,\n      monthBorderColor = _ref.monthBorderColor,\n      monthBorderWidth = _ref.monthBorderWidth,\n      monthLegend = _ref.monthLegend,\n      monthLegendOffset = _ref.monthLegendOffset,\n      monthLegendPosition = _ref.monthLegendPosition,\n      monthSpacing = _ref.monthSpacing,\n      dayBorderColor = _ref.dayBorderColor,\n      dayBorderWidth = _ref.dayBorderWidth,\n      daySpacing = _ref.daySpacing,\n      isInteractive = _ref.isInteractive,\n      tooltip = _ref.tooltip,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseLeave = _ref.onMouseLeave,\n      onMouseMove = _ref.onMouseMove,\n      legends = _ref.legends,\n      role = _ref.role;\n  var theme = useTheme();\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight;\n\n  var _useCalendarLayout = useCalendarLayout({\n    width: innerWidth,\n    height: innerHeight,\n    from: from,\n    to: to,\n    direction: direction,\n    yearSpacing: yearSpacing,\n    monthSpacing: monthSpacing,\n    daySpacing: daySpacing,\n    align: align\n  }),\n      months = _useCalendarLayout.months,\n      years = _useCalendarLayout.years,\n      rest = _objectWithoutProperties(_useCalendarLayout, [\"months\", \"years\"]);\n\n  var colorScaleFn = useColorScale({\n    data: data,\n    minValue: minValue,\n    maxValue: maxValue,\n    colors: colors,\n    colorScale: colorScale\n  });\n  var monthLegends = useMonthLegends({\n    months: months,\n    direction: direction,\n    monthLegendPosition: monthLegendPosition,\n    monthLegendOffset: monthLegendOffset\n  });\n  var yearLegends = useYearLegends({\n    years: years,\n    direction: direction,\n    yearLegendPosition: yearLegendPosition,\n    yearLegendOffset: yearLegendOffset\n  });\n  var days = useDays({\n    days: rest.days,\n    data: data,\n    colorScale: colorScaleFn,\n    emptyColor: emptyColor\n  });\n  var formatLegend = useValueFormatter(legendFormat);\n  var formatValue = useValueFormatter(valueFormat);\n  return React.createElement(SvgWrapper, {\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    theme: theme,\n    role: role\n  }, days.map(function (d) {\n    return React.createElement(CalendarDay, {\n      key: d.date.toString(),\n      data: d,\n      x: d.x,\n      y: d.y,\n      size: d.size,\n      spacing: daySpacing,\n      color: d.color,\n      borderWidth: dayBorderWidth,\n      borderColor: dayBorderColor,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onMouseMove: onMouseMove,\n      isInteractive: isInteractive,\n      tooltip: tooltip,\n      theme: theme,\n      onClick: onClick,\n      formatValue: formatValue\n    });\n  }), months.map(function (m) {\n    return React.createElement(CalendarMonthPath, {\n      key: m.date.toString(),\n      path: m.path,\n      borderWidth: monthBorderWidth,\n      borderColor: monthBorderColor\n    });\n  }), React.createElement(CalendarMonthLegends, {\n    months: monthLegends,\n    legend: monthLegend,\n    theme: theme\n  }), React.createElement(CalendarYearLegends, {\n    years: yearLegends,\n    legend: yearLegend,\n    theme: theme\n  }), legends.map(function (legend, i) {\n    var legendData = colorScaleFn.ticks(legend.itemCount).map(function (value) {\n      return {\n        id: value,\n        label: formatLegend(value),\n        color: colorScaleFn(value)\n      };\n    });\n    return React.createElement(BoxLegendSvg, Object.assign({\n      key: i\n    }, legend, {\n      containerWidth: width,\n      containerHeight: height,\n      data: legendData,\n      theme: theme\n    }));\n  }));\n};\n\nCalendar.displayName = 'Calendar';\nCalendar.defaultProps = CalendarDefaultProps;\nvar Calendar$1 = withContainer(Calendar);\n\nvar ResponsiveCalendar = function ResponsiveCalendar(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(Calendar$1, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nvar findDayUnderCursor = function findDayUnderCursor(event, canvasEl, days, size, dayBorderWidth, margin) {\n  var _getRelativeCursor = getRelativeCursor(canvasEl, event),\n      _getRelativeCursor2 = _slicedToArray(_getRelativeCursor, 2),\n      x = _getRelativeCursor2[0],\n      y = _getRelativeCursor2[1];\n\n  return days.find(function (day) {\n    return day.value !== undefined && isCursorInRect(day.x + margin.left - dayBorderWidth / 2, day.y + margin.top - dayBorderWidth / 2, size + dayBorderWidth, size + dayBorderWidth, x, y);\n  });\n};\n\nvar CalendarCanvas = memo(function (_ref) {\n  var partialMargin = _ref.margin,\n      width = _ref.width,\n      height = _ref.height,\n      pixelRatio = _ref.pixelRatio,\n      align = _ref.align,\n      colors = _ref.colors,\n      colorScale = _ref.colorScale,\n      data = _ref.data,\n      direction = _ref.direction,\n      emptyColor = _ref.emptyColor,\n      from = _ref.from,\n      to = _ref.to,\n      minValue = _ref.minValue,\n      maxValue = _ref.maxValue,\n      valueFormat = _ref.valueFormat,\n      legendFormat = _ref.legendFormat,\n      yearLegend = _ref.yearLegend,\n      yearLegendOffset = _ref.yearLegendOffset,\n      yearLegendPosition = _ref.yearLegendPosition,\n      yearSpacing = _ref.yearSpacing,\n      monthLegend = _ref.monthLegend,\n      monthLegendOffset = _ref.monthLegendOffset,\n      monthLegendPosition = _ref.monthLegendPosition,\n      monthSpacing = _ref.monthSpacing,\n      dayBorderColor = _ref.dayBorderColor,\n      dayBorderWidth = _ref.dayBorderWidth,\n      daySpacing = _ref.daySpacing,\n      isInteractive = _ref.isInteractive,\n      tooltip = _ref.tooltip,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseLeave = _ref.onMouseLeave,\n      onMouseMove = _ref.onMouseMove,\n      legends = _ref.legends;\n  var canvasEl = useRef(null);\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight,\n      margin = _useDimensions.margin;\n\n  var _useCalendarLayout = useCalendarLayout({\n    width: innerWidth,\n    height: innerHeight,\n    from: from,\n    to: to,\n    direction: direction,\n    yearSpacing: yearSpacing,\n    monthSpacing: monthSpacing,\n    daySpacing: daySpacing,\n    align: align\n  }),\n      months = _useCalendarLayout.months,\n      years = _useCalendarLayout.years,\n      rest = _objectWithoutProperties(_useCalendarLayout, [\"months\", \"years\"]);\n\n  var colorScaleFn = useColorScale({\n    data: data,\n    minValue: minValue,\n    maxValue: maxValue,\n    colors: colors,\n    colorScale: colorScale\n  });\n  var monthLegends = useMonthLegends({\n    months: months,\n    direction: direction,\n    monthLegendPosition: monthLegendPosition,\n    monthLegendOffset: monthLegendOffset\n  });\n  var yearLegends = useYearLegends({\n    years: years,\n    direction: direction,\n    yearLegendPosition: yearLegendPosition,\n    yearLegendOffset: yearLegendOffset\n  });\n  var days = useDays({\n    days: rest.days,\n    data: data,\n    colorScale: colorScaleFn,\n    emptyColor: emptyColor\n  });\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentDay = _useState2[0],\n      setCurrentDay = _useState2[1];\n\n  var theme = useTheme();\n  var formatValue = useValueFormatter(valueFormat);\n  var formatLegend = useValueFormatter(legendFormat);\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  useEffect(function () {\n    canvasEl.current.width = outerWidth * pixelRatio;\n    canvasEl.current.height = outerHeight * pixelRatio;\n    var ctx = canvasEl.current.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.fillStyle = theme.background;\n    ctx.fillRect(0, 0, outerWidth, outerHeight);\n    ctx.translate(margin.left, margin.top);\n    days.forEach(function (day) {\n      ctx.fillStyle = day.color;\n\n      if (dayBorderWidth > 0) {\n        ctx.strokeStyle = dayBorderColor;\n        ctx.lineWidth = dayBorderWidth;\n      }\n\n      ctx.beginPath();\n      ctx.rect(day.x, day.y, day.size, day.size);\n      ctx.fill();\n\n      if (dayBorderWidth > 0) {\n        ctx.stroke();\n      }\n    });\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = theme.labels.text.fill;\n    ctx.font = \"\".concat(theme.labels.text.fontSize, \"px \").concat(theme.labels.text.fontFamily);\n    monthLegends.forEach(function (month) {\n      ctx.save();\n      ctx.translate(month.x, month.y);\n      ctx.rotate(degreesToRadians(month.rotation));\n      ctx.fillText(monthLegend(month.year, month.month, month.date), 0, 0);\n      ctx.restore();\n    });\n    yearLegends.forEach(function (year) {\n      ctx.save();\n      ctx.translate(year.x, year.y);\n      ctx.rotate(degreesToRadians(year.rotation));\n      ctx.fillText(yearLegend(year.year), 0, 0);\n      ctx.restore();\n    });\n    legends.forEach(function (legend) {\n      var legendData = colorScaleFn.ticks(legend.itemCount).map(function (value) {\n        return {\n          id: value,\n          label: formatLegend(value),\n          color: colorScaleFn(value)\n        };\n      });\n      renderLegendToCanvas(ctx, _objectSpread2(_objectSpread2({}, legend), {}, {\n        data: legendData,\n        containerWidth: innerWidth,\n        containerHeight: innerHeight,\n        theme: theme\n      }));\n    });\n  }, [canvasEl, innerHeight, innerWidth, outerWidth, outerHeight, pixelRatio, margin, days, dayBorderColor, dayBorderWidth, colorScale, yearLegend, yearLegends, monthLegend, monthLegends, legends, theme, formatLegend]);\n  var handleMouseHover = useCallback(function (event) {\n    var data = findDayUnderCursor(event, canvasEl.current, days, days[0].size, dayBorderWidth, margin);\n\n    if (data) {\n      setCurrentDay(data);\n\n      var formatedData = _objectSpread2(_objectSpread2({}, data), {}, {\n        value: formatValue(data.value),\n        data: _objectSpread2({}, data.data)\n      });\n\n      showTooltipFromEvent(React.createElement(tooltip, _objectSpread2({}, formatedData)), event);\n      !currentDay && onMouseEnter && onMouseEnter(data, event);\n      onMouseMove && onMouseMove(data, event);\n      currentDay && currentDay.id !== data.id && onMouseLeave && onMouseLeave(data, event);\n    } else {\n      hideTooltip();\n      onMouseLeave && onMouseLeave(data, event);\n    }\n  }, [canvasEl, margin, days, setCurrentDay, formatValue, daySpacing, showTooltipFromEvent, hideTooltip, onMouseEnter, onMouseMove, onMouseLeave]);\n  var handleMouseLeave = useCallback(function () {\n    setCurrentDay(null);\n    hideTooltip();\n  }, [setCurrentDay, hideTooltip]);\n  var handleClick = useCallback(function (event) {\n    if (!onClick) return;\n    var data = findDayUnderCursor(event, canvasEl.current, days, days[0].size, daySpacing, margin);\n    data && onClick(data, event);\n  }, [canvasEl, daySpacing, margin, setCurrentDay, days, onClick]);\n  return React.createElement(\"canvas\", {\n    ref: canvasEl,\n    width: outerWidth * pixelRatio,\n    height: outerHeight * pixelRatio,\n    style: {\n      width: outerWidth,\n      height: outerHeight\n    },\n    onMouseEnter: isInteractive ? handleMouseHover : undefined,\n    onMouseMove: isInteractive ? handleMouseHover : undefined,\n    onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n    onClick: isInteractive ? handleClick : undefined\n  });\n});\nCalendarCanvas.displayName = 'CalendarCanvas';\nCalendarCanvas.defaultProps = CalendarCanvasDefaultProps;\nvar CalendarCanvas$1 = withContainer(CalendarCanvas);\n\nvar ResponsiveCalendarCanvas = function ResponsiveCalendarCanvas(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(CalendarCanvas$1, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nexport { Calendar$1 as Calendar, CalendarCanvas$1 as CalendarCanvas, CalendarCanvasDefaultProps, CalendarCanvasPropTypes, CalendarDefaultProps, CalendarPropTypes, ResponsiveCalendar, ResponsiveCalendarCanvas, bindDaysData, computeDomain, computeLayout, computeMonthLegendPositions, computeYearLegendPositions, useCalendarLayout, useColorScale, useDays, useMonthLegends, useYearLegends };","map":{"version":3,"sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/CalendarTooltip.js","../src/props.js","../src/CalendarYearLegends.js","../src/CalendarMonthPath.js","../src/CalendarMonthLegends.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/compute.js","../src/hooks.js","../src/CalendarDay.js","../src/Calendar.js","../src/ResponsiveCalendar.js","../src/CalendarCanvas.js","../src/ResponsiveCalendarCanvas.js"],"names":["objectWithoutPropertiesLoose","defineProperty","CalendarTooltip","memo","value","day","color","isNaN","monthLabelFormat","timeFormat","commonPropTypes","from","PropTypes","to","data","isRequired","align","minValue","maxValue","colors","colorScale","direction","emptyColor","yearLegend","yearSpacing","yearLegendPosition","yearLegendOffset","monthBorderWidth","monthBorderColor","monthLegend","monthSpacing","monthLegendPosition","monthLegendOffset","daySpacing","dayBorderWidth","dayBorderColor","isInteractive","onClick","onMouseEnter","onMouseLeave","onMouseMove","tooltip","valueFormat","legendFormat","legends","itemCount","CalendarPropTypes","role","CalendarCanvasPropTypes","pixelRatio","commonDefaultProps","weekdayLegend","CalendarDefaultProps","CalendarCanvasDefaultProps","global","CalendarYearLegends","years","legend","theme","year","text","CalendarMonthPath","path","borderWidth","borderColor","fill","strokeWidth","stroke","pointerEvents","CalendarMonthLegends","months","month","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","computeDomain","allValues","d","minSpec","Math","maxSpec","computeCellSize","width","height","yearRange","maxWeeks","hCellSize","vCellSize","monthPathAndBBox","date","cellSize","yearIndex","originX","originY","t1","firstWeek","timeWeek","timeYear","lastWeek","firstDay","lastDay","xO","yO","yearOffset","monthOffset","bbox","x","y","memoMonthPathAndBBox","memoize","cellPositionHorizontal","weekOfYear","cellPositionVertical","dayFormat","computeLayout","fromDate","isDate","toDate","range","timeWeeks","monthsSize","yearsSize","calendarWidth","calendarHeight","alignBox","cellPosition","days","yearStart","yearEnd","size","yearMonths","monthDate","bindDaysData","dayData","item","computeYearLegendPositions","position","offset","rotation","computeMonthLegendPositions","useCalendarLayout","useMemo","useColorScale","domain","defaultColorScale","scaleQuantize","useYearLegends","useMonthLegends","useDays","CalendarDay","formatValue","showTooltipFromEvent","hideTooltip","useTooltip","handleMouseEnter","useCallback","formatedData","React","handleMouseMove","handleMouseLeave","handleClick","undefined","Calendar","margin","partialMargin","useTheme","innerWidth","innerHeight","outerWidth","outerHeight","useDimensions","rest","colorScaleFn","monthLegends","yearLegends","formatLegend","useValueFormatter","m","legendData","id","label","i","withContainer","ResponsiveCalendar","findDayUnderCursor","getRelativeCursor","isCursorInRect","CalendarCanvas","canvasEl","useRef","currentDay","setCurrentDay","useState","useEffect","ctx","degreesToRadians","renderLegendToCanvas","containerWidth","containerHeight","handleMouseHover","ResponsiveCalendarCanvas"],"mappings":"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","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst CalendarTooltip = memo(({ value, day, color }) => {\n    if (value === undefined || isNaN(value)) return null\n    return <BasicTooltip id={day} value={value} color={color} enableChip={true} />\n})\n\nCalendarTooltip.displayName = 'CalendarTooltip'\nCalendarTooltip.propTypes = {\n    value: PropTypes.object.isRequired,\n    day: PropTypes.object.isRequired,\n    color: PropTypes.object.isRequired,\n}\n\nexport default CalendarTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { timeFormat } from 'd3-time-format'\nimport { boxAlignments } from '@nivo/core'\nimport { LegendPropShape } from '@nivo/legends'\nimport CalendarTooltip from './CalendarTooltip'\n\nconst monthLabelFormat = timeFormat('%b')\n\nconst commonPropTypes = {\n    from: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]).isRequired,\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]).isRequired,\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            day: PropTypes.string.isRequired,\n            value: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n\n    align: PropTypes.oneOf(boxAlignments).isRequired,\n\n    minValue: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n    maxValue: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n\n    colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n    colorScale: PropTypes.func,\n\n    direction: PropTypes.oneOf(['horizontal', 'vertical']),\n    emptyColor: PropTypes.string.isRequired,\n\n    yearLegend: PropTypes.func.isRequired,\n    yearSpacing: PropTypes.number.isRequired,\n    yearLegendPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    yearLegendOffset: PropTypes.number.isRequired,\n\n    monthBorderWidth: PropTypes.number.isRequired,\n    monthBorderColor: PropTypes.string.isRequired,\n    monthLegend: PropTypes.func.isRequired,\n    monthSpacing: PropTypes.number.isRequired,\n    monthLegendPosition: PropTypes.oneOf(['before', 'after']).isRequired,\n    monthLegendOffset: PropTypes.number.isRequired,\n\n    daySpacing: PropTypes.number.isRequired,\n    dayBorderWidth: PropTypes.number.isRequired,\n    dayBorderColor: PropTypes.string.isRequired,\n\n    isInteractive: PropTypes.bool,\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    valueFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    legendFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    legends: PropTypes.arrayOf(\n        PropTypes.shape({\n            ...LegendPropShape,\n            itemCount: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n}\n\nexport const CalendarPropTypes = {\n    ...commonPropTypes,\n    role: PropTypes.string.isRequired,\n}\n\nexport const CalendarCanvasPropTypes = {\n    ...commonPropTypes,\n    pixelRatio: PropTypes.number.isRequired,\n}\n\nconst commonDefaultProps = {\n    colors: ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560'],\n\n    align: 'center',\n    direction: 'horizontal',\n    emptyColor: '#fff',\n\n    minValue: 0,\n    maxValue: 'auto',\n\n    yearSpacing: 30,\n    yearLegend: year => year,\n    yearLegendPosition: 'before',\n    yearLegendOffset: 10,\n\n    monthBorderWidth: 2,\n    monthBorderColor: '#000',\n    monthSpacing: 0,\n    monthLegend: (year, month, date) => monthLabelFormat(date),\n    monthLegendPosition: 'before',\n    monthLegendOffset: 10,\n\n    weekdayLegend: d => d,\n    daySpacing: 0,\n    dayBorderWidth: 1,\n    dayBorderColor: '#000',\n\n    isInteractive: true,\n\n    legends: [],\n    tooltip: CalendarTooltip,\n}\n\nexport const CalendarDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n}\n\nexport const CalendarCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio:\n        global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst CalendarYearLegends = memo(({ years, legend, theme }) => {\n    return (\n        <>\n            {years.map(year => {\n                return (\n                    <text\n                        key={year.year}\n                        transform={`translate(${year.x},${year.y}) rotate(${year.rotation})`}\n                        textAnchor=\"middle\"\n                        style={theme.labels.text}\n                    >\n                        {legend(year.year)}\n                    </text>\n                )\n            })}\n        </>\n    )\n})\n\nCalendarYearLegends.propTypes = {\n    years: PropTypes.array.isRequired,\n    legend: PropTypes.func.isRequired,\n    theme: PropTypes.object.isRequired,\n}\n\nCalendarYearLegends.displayName = 'CalendarYearLegends'\n\nexport default CalendarYearLegends\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst CalendarMonthPath = memo(({ path, borderWidth, borderColor }) => {\n    return (\n        <path\n            d={path}\n            style={{\n                fill: 'none',\n                strokeWidth: borderWidth,\n                stroke: borderColor,\n                pointerEvents: 'none',\n            }}\n        />\n    )\n})\n\nCalendarMonthPath.propTypes = {\n    path: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n}\n\nCalendarMonthPath.displayName = 'CalendarMonthPath'\n\nexport default CalendarMonthPath\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst CalendarMonthLegends = memo(({ months, legend, theme }) => {\n    return (\n        <>\n            {months.map(month => {\n                return (\n                    <text\n                        key={`${month.date.toString()}.legend`}\n                        transform={`translate(${month.x},${month.y}) rotate(${month.rotation})`}\n                        textAnchor=\"middle\"\n                        style={theme.labels.text}\n                    >\n                        {legend(month.year, month.month, month.date)}\n                    </text>\n                )\n            })}\n        </>\n    )\n})\n\nCalendarMonthLegends.propTypes = {\n    months: PropTypes.array.isRequired,\n    legend: PropTypes.func.isRequired,\n    theme: PropTypes.object.isRequired,\n}\n\nCalendarMonthLegends.displayName = 'CalendarMonthLegends'\n\nexport default CalendarMonthLegends\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport memoize from 'lodash.memoize'\nimport isDate from 'lodash.isdate'\nimport range from 'lodash.range'\nimport { alignBox } from '@nivo/core'\nimport { timeFormat } from 'd3-time-format'\nimport { timeDays, timeWeek, timeWeeks, timeMonths, timeYear } from 'd3-time'\n\n/**\n * Compute min/max values.\n *\n * @param {Array<>}       data\n * @param {number|'auto'} minSpec - Define the strategy to use to compute min value, if number, it will be used, if 'auto', will use the lower value from the dataset\n * @param {number|'auto'} maxSpec - Define the strategy to use to compute max value, if number, it will be used, if 'auto', will use the higher value from the dataset\n * @return {[number, string]}\n */\nexport const computeDomain = (data, minSpec, maxSpec) => {\n    const allValues = data.map(d => d.value)\n    const minValue = minSpec === 'auto' ? Math.min(...allValues) : minSpec\n    const maxValue = maxSpec === 'auto' ? Math.max(...allValues) : maxSpec\n\n    return [minValue, maxValue]\n}\n\n/**\n * Compute day cell size according to current context.\n *\n * @param {number} width\n * @param {number} height\n * @param {number} direction\n * @param {array}  yearRange\n * @param {number} yearSpacing\n * @param {number} monthSpacing\n * @param {number} daySpacing\n * @param {number} maxWeeks\n * @returns {number}\n */\nconst computeCellSize = ({\n    width,\n    height,\n    direction,\n    yearRange,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    maxWeeks,\n}) => {\n    let hCellSize\n    let vCellSize\n\n    if (direction === 'horizontal') {\n        hCellSize = (width - monthSpacing * 12 - daySpacing * maxWeeks) / maxWeeks\n        vCellSize =\n            (height - (yearRange.length - 1) * yearSpacing - yearRange.length * (8 * daySpacing)) /\n            (yearRange.length * 7)\n    } else {\n        hCellSize =\n            (width - (yearRange.length - 1) * yearSpacing - yearRange.length * (8 * daySpacing)) /\n            (yearRange.length * 7)\n        vCellSize = (height - monthSpacing * 12 - daySpacing * maxWeeks) / maxWeeks\n    }\n\n    return Math.min(hCellSize, vCellSize)\n}\n\n/**\n * Computes month path and bounding box.\n *\n * @param {Date}   date\n * @param {number} cellSize\n * @param {number} yearIndex\n * @param {number} yearSpacing\n * @param {number} monthSpacing\n * @param {number} daySpacing\n * @param {string} direction\n * @param {number} originX\n * @param {number} originY\n * @returns { { path: string, bbox: { x: number, y: number, width: number, height: number } } }\n */\nconst monthPathAndBBox = ({\n    date,\n    cellSize,\n    yearIndex,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    direction,\n    originX,\n    originY,\n}) => {\n    // first day of next month\n    const t1 = new Date(date.getFullYear(), date.getMonth() + 1, 0)\n\n    // ranges\n    const firstWeek = timeWeek.count(timeYear(date), date)\n    const lastWeek = timeWeek.count(timeYear(t1), t1)\n    const firstDay = date.getDay()\n    const lastDay = t1.getDay()\n\n    // offset according to year index and month\n    let xO = originX\n    let yO = originY\n    const yearOffset = yearIndex * (7 * (cellSize + daySpacing) + yearSpacing)\n    const monthOffset = date.getMonth() * monthSpacing\n    if (direction === 'horizontal') {\n        yO += yearOffset\n        xO += monthOffset\n    } else {\n        yO += monthOffset\n        xO += yearOffset\n    }\n\n    let path\n    let bbox = { x: xO, y: yO, width: 0, height: 0 }\n    if (direction === 'horizontal') {\n        path = [\n            `M${xO + (firstWeek + 1) * (cellSize + daySpacing)},${\n                yO + firstDay * (cellSize + daySpacing)\n            }`,\n            `H${xO + firstWeek * (cellSize + daySpacing)}V${yO + 7 * (cellSize + daySpacing)}`,\n            `H${xO + lastWeek * (cellSize + daySpacing)}V${\n                yO + (lastDay + 1) * (cellSize + daySpacing)\n            }`,\n            `H${xO + (lastWeek + 1) * (cellSize + daySpacing)}V${yO}`,\n            `H${xO + (firstWeek + 1) * (cellSize + daySpacing)}Z`,\n        ].join('')\n\n        bbox.x = xO + firstWeek * (cellSize + daySpacing)\n        bbox.width = xO + (lastWeek + 1) * (cellSize + daySpacing) - bbox.x\n        bbox.height = 7 * (cellSize + daySpacing)\n    } else {\n        path = [\n            `M${xO + firstDay * (cellSize + daySpacing)},${\n                yO + (firstWeek + 1) * (cellSize + daySpacing)\n            }`,\n            `H${xO}V${yO + (lastWeek + 1) * (cellSize + daySpacing)}`,\n            `H${xO + (lastDay + 1) * (cellSize + daySpacing)}V${\n                yO + lastWeek * (cellSize + daySpacing)\n            }`,\n            `H${xO + 7 * (cellSize + daySpacing)}V${yO + firstWeek * (cellSize + daySpacing)}`,\n            `H${xO + firstDay * (cellSize + daySpacing)}Z`,\n        ].join('')\n\n        bbox.y = yO + firstWeek * (cellSize + daySpacing)\n        bbox.width = 7 * (cellSize + daySpacing)\n        bbox.height = yO + (lastWeek + 1) * (cellSize + daySpacing) - bbox.y\n    }\n\n    return { path, bbox }\n}\n\n/**\n * Creates a memoized version of monthPathAndBBox function.\n */\nconst memoMonthPathAndBBox = memoize(\n    monthPathAndBBox,\n    ({\n        date,\n        cellSize,\n        yearIndex,\n        yearSpacing,\n        monthSpacing,\n        daySpacing,\n        direction,\n        originX,\n        originY,\n    }) => {\n        return `${date.toString()}.${cellSize}.${yearIndex}.${yearSpacing}.${monthSpacing}.${daySpacing}.${direction}.${originX}.${originY}`\n    }\n)\n\n/**\n * Returns a function to Compute day cell position for horizontal layout.\n *\n * @param {number} cellSize\n * @param {number} yearSpacing\n * @param {number} monthSpacing\n * @param {number} daySpacing\n * @returns { function(): { x: number, y: number } }\n */\nconst cellPositionHorizontal = (cellSize, yearSpacing, monthSpacing, daySpacing) => {\n    return (originX, originY, d, yearIndex) => {\n        const weekOfYear = timeWeek.count(timeYear(d), d)\n\n        return {\n            x:\n                originX +\n                weekOfYear * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                d.getMonth() * monthSpacing,\n            y:\n                originY +\n                d.getDay() * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                yearIndex * (yearSpacing + 7 * (cellSize + daySpacing)),\n        }\n    }\n}\n\n/**\n * Returns a function to Compute day cell position for vertical layout.\n *\n * @param {number} cellSize\n * @param {number} yearSpacing\n * @param {number} monthSpacing\n * @param {number} daySpacing\n * @returns { function(): { x: number, y: number } }\n */\nconst cellPositionVertical = (cellSize, yearSpacing, monthSpacing, daySpacing) => {\n    return (originX, originY, d, yearIndex) => {\n        const weekOfYear = timeWeek.count(timeYear(d), d)\n\n        return {\n            x:\n                originX +\n                d.getDay() * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                yearIndex * (yearSpacing + 7 * (cellSize + daySpacing)),\n            y:\n                originY +\n                weekOfYear * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                d.getMonth() * monthSpacing,\n        }\n    }\n}\n\n// used for days range and data matching\nconst dayFormat = timeFormat('%Y-%m-%d')\n\n/**\n * Compute base layout, without caring about the current data.\n *\n * @param {number}      width\n * @param {number}      height\n * @param {string|Date} from\n * @param {string|Date} to\n * @param {string}      direction\n * @param {number}      yearSpacing\n * @param {number}      monthSpacing\n * @param {number}      daySpacing\n * @param {string}      align\n * @returns {object}\n */\nexport const computeLayout = ({\n    width,\n    height,\n    from,\n    to,\n    direction,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    align,\n}) => {\n    const fromDate = isDate(from) ? from : new Date(from)\n    const toDate = isDate(to) ? to : new Date(to)\n\n    let yearRange = range(fromDate.getFullYear(), toDate.getFullYear() + 1)\n    const maxWeeks =\n        Math.max(\n            ...yearRange.map(\n                year => timeWeeks(new Date(year, 0, 1), new Date(year + 1, 0, 1)).length\n            )\n        ) + 1\n\n    const cellSize = computeCellSize({\n        width,\n        height,\n        direction,\n        yearRange,\n        yearSpacing,\n        monthSpacing,\n        daySpacing,\n        maxWeeks,\n    })\n\n    const monthsSize = cellSize * maxWeeks + daySpacing * maxWeeks + monthSpacing * 12\n    const yearsSize =\n        (cellSize + daySpacing) * 7 * yearRange.length + yearSpacing * (yearRange.length - 1)\n\n    const calendarWidth = direction === 'horizontal' ? monthsSize : yearsSize\n    const calendarHeight = direction === 'horizontal' ? yearsSize : monthsSize\n    const [originX, originY] = alignBox(\n        {\n            x: 0,\n            y: 0,\n            width: calendarWidth,\n            height: calendarHeight,\n        },\n        {\n            x: 0,\n            y: 0,\n            width,\n            height,\n        },\n        align\n    )\n\n    let cellPosition\n    if (direction === 'horizontal') {\n        cellPosition = cellPositionHorizontal(cellSize, yearSpacing, monthSpacing, daySpacing)\n    } else {\n        cellPosition = cellPositionVertical(cellSize, yearSpacing, monthSpacing, daySpacing)\n    }\n\n    let years = []\n    let months = []\n    let days = []\n\n    yearRange.forEach((year, i) => {\n        const yearStart = new Date(year, 0, 1)\n        const yearEnd = new Date(year + 1, 0, 1)\n\n        days = days.concat(\n            timeDays(yearStart, yearEnd).map(dayDate => {\n                return {\n                    date: dayDate,\n                    day: dayFormat(dayDate),\n                    size: cellSize,\n                    ...cellPosition(originX, originY, dayDate, i),\n                }\n            })\n        )\n\n        const yearMonths = timeMonths(yearStart, yearEnd).map(monthDate => ({\n            date: monthDate,\n            year: monthDate.getFullYear(),\n            month: monthDate.getMonth(),\n            ...memoMonthPathAndBBox({\n                originX,\n                originY,\n                date: monthDate,\n                direction,\n                yearIndex: i,\n                yearSpacing,\n                monthSpacing,\n                daySpacing,\n                cellSize,\n            }),\n        }))\n\n        months = months.concat(yearMonths)\n\n        years.push({\n            year,\n            bbox: {\n                x: yearMonths[0].bbox.x,\n                y: yearMonths[0].bbox.y,\n                width: yearMonths[11].bbox.x - yearMonths[0].bbox.x + yearMonths[11].bbox.width,\n                height: yearMonths[11].bbox.y - yearMonths[0].bbox.y + yearMonths[11].bbox.height,\n            },\n        })\n    })\n\n    return { years, months, days, cellSize, calendarWidth, calendarHeight, originX, originY }\n}\n\n/**\n * Bind current data to computed day cells.\n *\n * @param {array}  days\n * @param {array}  data\n * @param {object} colorScale\n * @param {string} emptyColor\n * @returns {Array}\n */\nexport const bindDaysData = ({ days, data, colorScale, emptyColor }) => {\n    return days.map(day => {\n        const dayData = data.find(item => item.day === day.day)\n\n        if (!dayData) {\n            return { ...day, color: emptyColor }\n        }\n\n        return {\n            ...day,\n            color: colorScale(dayData.value),\n            data: dayData,\n            value: dayData.value,\n        }\n    })\n}\n\nexport const computeYearLegendPositions = ({ years, direction, position, offset }) => {\n    return years.map(year => {\n        let x = 0\n        let y = 0\n        let rotation = 0\n        if (direction === 'horizontal' && position === 'before') {\n            x = year.bbox.x - offset\n            y = year.bbox.y + year.bbox.height / 2\n            rotation = -90\n        } else if (direction === 'horizontal' && position === 'after') {\n            x = year.bbox.x + year.bbox.width + offset\n            y = year.bbox.y + year.bbox.height / 2\n            rotation = -90\n        } else if (direction === 'vertical' && position === 'before') {\n            x = year.bbox.x + year.bbox.width / 2\n            y = year.bbox.y - offset\n        } else {\n            x = year.bbox.x + year.bbox.width / 2\n            y = year.bbox.y + year.bbox.height + offset\n        }\n\n        return {\n            ...year,\n            x,\n            y,\n            rotation,\n        }\n    })\n}\n\nexport const computeMonthLegendPositions = ({ months, direction, position, offset }) => {\n    return months.map(month => {\n        let x = 0\n        let y = 0\n        let rotation = 0\n        if (direction === 'horizontal' && position === 'before') {\n            x = month.bbox.x + month.bbox.width / 2\n            y = month.bbox.y - offset\n        } else if (direction === 'horizontal' && position === 'after') {\n            x = month.bbox.x + month.bbox.width / 2\n            y = month.bbox.y + month.bbox.height + offset\n        } else if (direction === 'vertical' && position === 'before') {\n            x = month.bbox.x - offset\n            y = month.bbox.y + month.bbox.height / 2\n            rotation = -90\n        } else {\n            x = month.bbox.x + month.bbox.width + offset\n            y = month.bbox.y + month.bbox.height / 2\n            rotation = -90\n        }\n\n        return {\n            ...month,\n            x,\n            y,\n            rotation,\n        }\n    })\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useMemo } from 'react'\nimport { scaleQuantize } from 'd3-scale'\nimport {\n    computeDomain,\n    computeYearLegendPositions,\n    computeMonthLegendPositions,\n    bindDaysData,\n    computeLayout,\n} from './compute'\n\nexport const useCalendarLayout = ({\n    width,\n    height,\n    from,\n    to,\n    direction,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    align,\n}) =>\n    useMemo(\n        () =>\n            computeLayout({\n                width,\n                height,\n                from,\n                to,\n                direction,\n                yearSpacing,\n                monthSpacing,\n                daySpacing,\n                align,\n            }),\n        [width, height, from, to, direction, yearSpacing, monthSpacing, daySpacing, align]\n    )\n\nexport const useColorScale = ({ data, minValue, maxValue, colors, colorScale }) =>\n    useMemo(() => {\n        if (colorScale) return colorScale\n        const domain = computeDomain(data, minValue, maxValue)\n        const defaultColorScale = scaleQuantize().domain(domain).range(colors)\n        return defaultColorScale\n    }, [data, minValue, maxValue, colors, colorScale])\n\nexport const useYearLegends = ({ years, direction, yearLegendPosition, yearLegendOffset }) =>\n    useMemo(\n        () =>\n            computeYearLegendPositions({\n                years,\n                direction,\n                position: yearLegendPosition,\n                offset: yearLegendOffset,\n            }),\n        [years, direction, yearLegendPosition, yearLegendOffset]\n    )\n\nexport const useMonthLegends = ({ months, direction, monthLegendPosition, monthLegendOffset }) =>\n    useMemo(\n        () =>\n            computeMonthLegendPositions({\n                months,\n                direction,\n                position: monthLegendPosition,\n                offset: monthLegendOffset,\n            }),\n        [months, direction, monthLegendPosition, monthLegendOffset]\n    )\n\nexport const useDays = ({ days, data, colorScale, emptyColor }) =>\n    useMemo(\n        () =>\n            bindDaysData({\n                days,\n                data,\n                colorScale,\n                emptyColor,\n            }),\n        [days, data, colorScale, emptyColor]\n    )\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst CalendarDay = memo(\n    ({\n        data,\n        x,\n        y,\n        size,\n        color,\n        borderWidth,\n        borderColor,\n        isInteractive,\n        tooltip,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        formatValue,\n    }) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useCallback(\n            event => {\n                const formatedData = {\n                    ...data,\n                    value: formatValue(data.value),\n                    data: { ...data.data },\n                }\n                showTooltipFromEvent(React.createElement(tooltip, { ...formatedData }), event)\n                onMouseEnter && onMouseEnter(data, event)\n            },\n            [showTooltipFromEvent, tooltip, data, onMouseEnter, formatValue]\n        )\n        const handleMouseMove = useCallback(\n            event => {\n                const formatedData = {\n                    ...data,\n                    value: formatValue(data.value),\n                    data: { ...data.data },\n                }\n                showTooltipFromEvent(React.createElement(tooltip, { ...formatedData }), event)\n                onMouseMove && onMouseMove(data, event)\n            },\n            [showTooltipFromEvent, tooltip, data, onMouseMove, formatValue]\n        )\n        const handleMouseLeave = useCallback(\n            event => {\n                hideTooltip()\n                onMouseLeave && onMouseLeave(data, event)\n            },\n            [isInteractive, hideTooltip, data, onMouseLeave]\n        )\n        const handleClick = useCallback(event => onClick && onClick(data, event), [\n            isInteractive,\n            data,\n            onClick,\n        ])\n\n        return (\n            <rect\n                x={x}\n                y={y}\n                width={size}\n                height={size}\n                style={{\n                    fill: color,\n                    strokeWidth: borderWidth,\n                    stroke: borderColor,\n                }}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleMouseMove : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n\nCalendarDay.displayName = 'CalendarDay'\nCalendarDay.propTypes = {\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    data: PropTypes.object.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    spacing: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    formatValue: PropTypes.func,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    theme: PropTypes.shape({\n        tooltip: PropTypes.shape({}).isRequired,\n    }).isRequired,\n}\n\nexport default CalendarDay\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { SvgWrapper, useTheme, useDimensions, withContainer, useValueFormatter } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { CalendarPropTypes, CalendarDefaultProps } from './props'\nimport CalendarYearLegends from './CalendarYearLegends'\nimport CalendarMonthPath from './CalendarMonthPath'\nimport CalendarMonthLegends from './CalendarMonthLegends'\nimport { useMonthLegends, useYearLegends, useCalendarLayout, useDays, useColorScale } from './hooks'\nimport CalendarDay from './CalendarDay'\n\nconst Calendar = ({\n    margin: partialMargin,\n    width,\n    height,\n\n    align,\n    colors,\n    colorScale,\n    data,\n    direction,\n    emptyColor,\n    from,\n    to,\n    minValue,\n    maxValue,\n    valueFormat,\n    legendFormat,\n\n    yearLegend,\n    yearLegendOffset,\n    yearLegendPosition,\n    yearSpacing,\n\n    monthBorderColor,\n    monthBorderWidth,\n    monthLegend,\n    monthLegendOffset,\n    monthLegendPosition,\n    monthSpacing,\n\n    dayBorderColor,\n    dayBorderWidth,\n    daySpacing,\n\n    isInteractive,\n    tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n\n    legends,\n    role,\n}) => {\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const { months, years, ...rest } = useCalendarLayout({\n        width: innerWidth,\n        height: innerHeight,\n        from,\n        to,\n        direction,\n        yearSpacing,\n        monthSpacing,\n        daySpacing,\n        align,\n    })\n    const colorScaleFn = useColorScale({ data, minValue, maxValue, colors, colorScale })\n    const monthLegends = useMonthLegends({\n        months,\n        direction,\n        monthLegendPosition,\n        monthLegendOffset,\n    })\n    const yearLegends = useYearLegends({ years, direction, yearLegendPosition, yearLegendOffset })\n    const days = useDays({ days: rest.days, data, colorScale: colorScaleFn, emptyColor })\n    const formatLegend = useValueFormatter(legendFormat)\n    const formatValue = useValueFormatter(valueFormat)\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            theme={theme}\n            role={role}\n        >\n            {days.map(d => (\n                <CalendarDay\n                    key={d.date.toString()}\n                    data={d}\n                    x={d.x}\n                    y={d.y}\n                    size={d.size}\n                    spacing={daySpacing}\n                    color={d.color}\n                    borderWidth={dayBorderWidth}\n                    borderColor={dayBorderColor}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    onMouseMove={onMouseMove}\n                    isInteractive={isInteractive}\n                    tooltip={tooltip}\n                    theme={theme}\n                    onClick={onClick}\n                    formatValue={formatValue}\n                />\n            ))}\n            {months.map(m => (\n                <CalendarMonthPath\n                    key={m.date.toString()}\n                    path={m.path}\n                    borderWidth={monthBorderWidth}\n                    borderColor={monthBorderColor}\n                />\n            ))}\n            <CalendarMonthLegends months={monthLegends} legend={monthLegend} theme={theme} />\n            <CalendarYearLegends years={yearLegends} legend={yearLegend} theme={theme} />\n            {legends.map((legend, i) => {\n                const legendData = colorScaleFn.ticks(legend.itemCount).map(value => ({\n                    id: value,\n                    label: formatLegend(value),\n                    color: colorScaleFn(value),\n                }))\n\n                return (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                        data={legendData}\n                        theme={theme}\n                    />\n                )\n            })}\n        </SvgWrapper>\n    )\n}\n\nCalendar.displayName = 'Calendar'\nCalendar.defaultProps = CalendarDefaultProps\nCalendar.propTypes = CalendarPropTypes\n\nexport default withContainer(Calendar)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Calendar from './Calendar'\n\nconst ResponsiveCalendar = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Calendar width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveCalendar\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useRef, useState, useEffect, useCallback } from 'react'\nimport {\n    isCursorInRect,\n    getRelativeCursor,\n    degreesToRadians,\n    useDimensions,\n    useTheme,\n    withContainer,\n    useValueFormatter,\n} from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { CalendarCanvasPropTypes, CalendarCanvasDefaultProps } from './props'\nimport { useCalendarLayout, useColorScale, useMonthLegends, useYearLegends, useDays } from './hooks'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst findDayUnderCursor = (event, canvasEl, days, size, dayBorderWidth, margin) => {\n    const [x, y] = getRelativeCursor(canvasEl, event)\n    return days.find(day => {\n        return (\n            day.value !== undefined &&\n            isCursorInRect(\n                day.x + margin.left - dayBorderWidth / 2,\n                day.y + margin.top - dayBorderWidth / 2,\n                size + dayBorderWidth,\n                size + dayBorderWidth,\n                x,\n                y\n            )\n        )\n    })\n}\n\nconst CalendarCanvas = memo(\n    ({\n        margin: partialMargin,\n        width,\n        height,\n        pixelRatio,\n\n        align,\n        colors,\n        colorScale,\n        data,\n        direction,\n        emptyColor,\n        from,\n        to,\n        minValue,\n        maxValue,\n        valueFormat,\n        legendFormat,\n\n        yearLegend,\n        yearLegendOffset,\n        yearLegendPosition,\n        yearSpacing,\n\n        monthLegend,\n        monthLegendOffset,\n        monthLegendPosition,\n        monthSpacing,\n\n        dayBorderColor,\n        dayBorderWidth,\n        daySpacing,\n\n        isInteractive,\n        tooltip,\n        onClick,\n        onMouseEnter,\n        onMouseLeave,\n        onMouseMove,\n\n        legends,\n    }) => {\n        const canvasEl = useRef(null)\n        const { innerWidth, innerHeight, outerWidth, outerHeight, margin } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n        const { months, years, ...rest } = useCalendarLayout({\n            width: innerWidth,\n            height: innerHeight,\n            from,\n            to,\n            direction,\n            yearSpacing,\n            monthSpacing,\n            daySpacing,\n            align,\n        })\n        const colorScaleFn = useColorScale({ data, minValue, maxValue, colors, colorScale })\n        const monthLegends = useMonthLegends({\n            months,\n            direction,\n            monthLegendPosition,\n            monthLegendOffset,\n        })\n        const yearLegends = useYearLegends({\n            years,\n            direction,\n            yearLegendPosition,\n            yearLegendOffset,\n        })\n        const days = useDays({ days: rest.days, data, colorScale: colorScaleFn, emptyColor })\n        const [currentDay, setCurrentDay] = useState(null)\n        const theme = useTheme()\n        const formatValue = useValueFormatter(valueFormat)\n        const formatLegend = useValueFormatter(legendFormat)\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        useEffect(() => {\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            days.forEach(day => {\n                ctx.fillStyle = day.color\n                if (dayBorderWidth > 0) {\n                    ctx.strokeStyle = dayBorderColor\n                    ctx.lineWidth = dayBorderWidth\n                }\n\n                ctx.beginPath()\n                ctx.rect(day.x, day.y, day.size, day.size)\n                ctx.fill()\n\n                if (dayBorderWidth > 0) {\n                    ctx.stroke()\n                }\n            })\n\n            ctx.textAlign = 'center'\n            ctx.textBaseline = 'middle'\n            ctx.fillStyle = theme.labels.text.fill\n            ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n            monthLegends.forEach(month => {\n                ctx.save()\n                ctx.translate(month.x, month.y)\n                ctx.rotate(degreesToRadians(month.rotation))\n                ctx.fillText(monthLegend(month.year, month.month, month.date), 0, 0)\n                ctx.restore()\n            })\n\n            yearLegends.forEach(year => {\n                ctx.save()\n                ctx.translate(year.x, year.y)\n                ctx.rotate(degreesToRadians(year.rotation))\n                ctx.fillText(yearLegend(year.year), 0, 0)\n                ctx.restore()\n            })\n\n            legends.forEach(legend => {\n                const legendData = colorScaleFn.ticks(legend.itemCount).map(value => ({\n                    id: value,\n                    label: formatLegend(value),\n                    color: colorScaleFn(value),\n                }))\n\n                renderLegendToCanvas(ctx, {\n                    ...legend,\n                    data: legendData,\n                    containerWidth: innerWidth,\n                    containerHeight: innerHeight,\n                    theme,\n                })\n            })\n        }, [\n            canvasEl,\n            innerHeight,\n            innerWidth,\n            outerWidth,\n            outerHeight,\n            pixelRatio,\n            margin,\n            days,\n            dayBorderColor,\n            dayBorderWidth,\n            colorScale,\n            yearLegend,\n            yearLegends,\n            monthLegend,\n            monthLegends,\n            legends,\n            theme,\n            formatLegend,\n        ])\n\n        const handleMouseHover = useCallback(\n            event => {\n                const data = findDayUnderCursor(\n                    event,\n                    canvasEl.current,\n                    days,\n                    days[0].size,\n                    dayBorderWidth,\n                    margin\n                )\n\n                if (data) {\n                    setCurrentDay(data)\n                    const formatedData = {\n                        ...data,\n                        value: formatValue(data.value),\n                        data: { ...data.data },\n                    }\n                    showTooltipFromEvent(React.createElement(tooltip, { ...formatedData }), event)\n                    !currentDay && onMouseEnter && onMouseEnter(data, event)\n                    onMouseMove && onMouseMove(data, event)\n                    currentDay &&\n                        currentDay.id !== data.id &&\n                        onMouseLeave &&\n                        onMouseLeave(data, event)\n                } else {\n                    hideTooltip()\n                    onMouseLeave && onMouseLeave(data, event)\n                }\n            },\n            [\n                canvasEl,\n                margin,\n                days,\n                setCurrentDay,\n                formatValue,\n                daySpacing,\n                showTooltipFromEvent,\n                hideTooltip,\n                onMouseEnter,\n                onMouseMove,\n                onMouseLeave,\n            ]\n        )\n\n        const handleMouseLeave = useCallback(() => {\n            setCurrentDay(null)\n            hideTooltip()\n        }, [setCurrentDay, hideTooltip])\n\n        const handleClick = useCallback(\n            event => {\n                if (!onClick) return\n\n                const data = findDayUnderCursor(\n                    event,\n                    canvasEl.current,\n                    days,\n                    days[0].size,\n                    daySpacing,\n                    margin\n                )\n\n                data && onClick(data, event)\n            },\n            [canvasEl, daySpacing, margin, setCurrentDay, days, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                }}\n                onMouseEnter={isInteractive ? handleMouseHover : undefined}\n                onMouseMove={isInteractive ? handleMouseHover : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n\nCalendarCanvas.displayName = 'CalendarCanvas'\nCalendarCanvas.defaultProps = CalendarCanvasDefaultProps\nCalendarCanvas.propTypes = CalendarCanvasPropTypes\n\nexport default withContainer(CalendarCanvas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport CalendarCanvas from './CalendarCanvas'\n\nconst ResponsiveCalendarCanvas = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <CalendarCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveCalendarCanvas\n"]},"metadata":{},"sourceType":"module"}